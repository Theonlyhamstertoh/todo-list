(()=>{"use strict";var n={802:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(15),o=r.n(t),i=r(645),a=r.n(i)()(o());a.push([n.id,'*{box-sizing:border-box;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif;margin:0;padding:0}li{list-style-type:none}.item_due-overdue{border-radius:50px;padding:2px 7px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;height:25px;background-color:#c02525}.item_due-today{border-radius:50px;padding:2px 7px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;height:25px;background-color:#d8b000}.item_due-someday{border-radius:50px;padding:2px 7px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;height:25px;background-color:#71c206}.edit-icon{position:absolute;top:45%;right:-46px;transform:translate(-50%, -50%);width:20px;height:20px;margin-top:5px;cursor:pointer}.edit_title{outline:none;border:none;background-color:transparent;font-size:16px;color:rgba(255,255,255,.856);width:100%;height:100%;cursor:text}.subtask{padding-left:20px}.button-style1{outline:none;border:none;background-color:transparent;background-color:#3c91c2;color:rgba(255,255,255,.856);border-radius:10px;padding:7px;cursor:pointer}.button-style2{background-color:transparent;outline:none;border:none;background-color:transparent;color:rgba(255,255,255,.856);text-decoration:underline;cursor:pointer}::placeholder{color:rgba(202,202,202,.698)}.disabled{opacity:.4}@media(max-width: 610px){.list-container{padding:0 50px 100px 25px !important}}header{position:fixed;align-items:center;padding:40px 25px;gap:20px;display:flex;flex-direction:column;width:70px;height:100vh;background-color:#222}header .icon{display:flex;flex-direction:row;justify-content:center;align-items:center;width:40px;height:40px;background-color:#555;filter:grayscale(100%)}main{margin-left:70px;width:calc(100vw - 70px);height:100vh;background-color:#333;overflow-y:hidden}.list-container{padding:0px 100px 100px 100px;height:100%;overflow:auto}.list-nav{color:#ffffffc7;padding:40px 0 10px 0;display:flex;flex-direction:row;justify-content:space-between;align-items:center;align-items:center;border-bottom:1px solid rgba(204,204,204,.171)}.list-nav .list-heading{font-size:25px;font-weight:bold}.list-nav .list-sort{padding-right:20px;cursor:pointer}.list-content{padding-top:15px;color:rgba(255,255,255,.856);user-select:none}.list-content .task-heading{font-size:20px;font-weight:bold;padding-bottom:5px}.list-content .task_list{margin-bottom:30px}.task_list_item{padding:10px;border-radius:7px;margin:10px 0;background-color:#272727;box-shadow:inset -1px -1px 1px 1px rgba(110,110,110,.287);display:flex;flex-direction:row;justify-content:space-between;align-items:center;position:relative;width:100%;height:45px}.task_list_item:hover{text-decoration:line-through;cursor:pointer}.task_list_item .item_title{font-size:16px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.task_list_item .item_tools{display:flex;flex-direction:row;justify-content:center;align-items:center}.plus_add_button{display:flex;flex-direction:row;justify-content:initial;align-items:center;gap:5px;cursor:pointer;padding-bottom:5px;user-select:none;color:rgba(202,202,202,.698)}.plus_add_button:hover{color:rgba(255,255,255,.856)}.plus_add_button:hover .plus-icon{border-radius:50px;background-color:#3c91c2}.plus_add_button .plus-icon{width:20px;height:20px;pointer-events:none}.plus_add_button .add_task{pointer-events:none}.edit_top{padding:10px;border-radius:7px;margin:10px 0;background-color:#272727;box-shadow:inset -1px -1px 1px 1px rgba(110,110,110,.287)}.edit_extra{display:flex;flex-direction:row;justify-content:space-between;align-items:center}.edit_extra .edit_tools{display:flex;flex-direction:row;justify-content:initial;align-items:center;margin:10px 0;gap:10px}.edit_extra .edit_tools .edit_icon{width:70px;height:20px;background-color:#555}.edit_buttons_container{display:flex;flex-direction:row;justify-content:initial;align-items:center;gap:10px}',"",{version:3,sources:["webpack://./_base.scss","webpack://./_utility.scss","webpack://./_mixin.scss","webpack://./_var.scss","webpack://./_mediaqueries.scss","webpack://./style.scss"],names:[],mappings:"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",sourcesContent:["* {\r\n    box-sizing: border-box;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nli {\r\n    list-style-type: none;\r\n}",'// Utility classes that give generally common styling and can be used in many places\r\n\r\n@use "var";\r\n@use "mixin";\r\n\r\n.item_due-overdue {\r\n    @include mixin.date-padding;\r\n    background-color: var.$task-dateColor1;\r\n\r\n}\r\n\r\n.item_due-today {\r\n    @include mixin.date-padding;\r\n    background-color: var.$task-dateColor2;\r\n\r\n\r\n}\r\n\r\n.item_due-someday {\r\n    @include mixin.date-padding;\r\n    background-color: var.$task-dateColor3;\r\n}\r\n\r\n.edit-icon {\r\n    position: absolute;\r\n    top: 45%;\r\n    right: -46px;\r\n    transform: translate(-50%, -50%);\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-top: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\n.edit_title {\r\n    @include mixin.remove_border-outline;\r\n    font-size: var.$normal-size;\r\n    color: var.$taskTitle-color;\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: text;\r\n}\r\n\r\n.subtask {\r\n    padding-left: 20px;\r\n}\r\n.button-style1 {\r\n    @include mixin.remove_border-outline;\r\n    background-color: rgb(60, 145, 194);\r\n    color: var.$buttonText-color;\r\n\r\n    border-radius: 10px;\r\n    padding: 7px;\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n.button-style2 {\r\n    background-color: transparent;\r\n    @include mixin.remove_border-outline;\r\n    color: var.$buttonText-color;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n}\r\n\r\n\r\n::placeholder {\r\n    color: var.$placeholder-color;\r\n}\r\n\r\n.disabled {\r\n    opacity: 0.4;\r\n}','@use "var";\r\n@mixin flex-center($flex-direction, $flex-content){\r\n    display: flex;\r\n    flex-direction: $flex-direction;\r\n    justify-content: $flex-content;\r\n    align-items: center;\r\n}\r\n@mixin flex-column {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n@mixin big-title {\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n}\r\n\r\n@mixin med-title {\r\n    font-size: var.$title-size;\r\n    font-weight: bold;\r\n}\r\n\r\n\r\n@mixin task_list_item {\r\n    padding: 10px;\r\n    border-radius: 7px;\r\n\r\n    margin: 10px 0;\r\n    background-color: var.$task-backgroundColor;\r\n    box-shadow: inset -1px -1px 1px 1px rgba(110, 110, 110, 0.287)\r\n}\r\n\r\n\r\n@mixin remove_border-outline {\r\n    outline: none;\r\n    border: none;\r\n    background-color: transparent;\r\n}\r\n\r\n@mixin date-padding {\r\n    border-radius: 50px;\r\n    padding: 2px 7px;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    height: 25px;\r\n}\r\n',"//dark theme mode\r\n\r\n// Color -----------------\x3e       \r\n\r\n//base\r\n$heading-color: #222222;\r\n$main-color: #333333;\r\n\r\n// list\r\n$listHeading-color: #ffffffc7;\r\n$borderbottom-color: 1px solid rgba(204, 204, 204, 0.171);  \r\n\r\n//task\r\n$taskTitle-color: rgba(255, 255, 255, 0.856);\r\n$task-backgroundColor: rgb(39, 39, 39);\r\n\r\n//due date \r\n$task-dateColor1: rgb(192, 37, 37);\r\n$task-dateColor2: rgb(216, 176, 0);\r\n$task-dateColor3: rgb(113, 194, 6);\r\n\r\n//add task \r\n$plusIcon-color: rgb(60, 145, 194);  \r\n// edit button \r\n$buttonText-color: rgba(255, 255, 255, 0.856);\r\n$placeholder-color: rgba(202, 202, 202, 0.698);\r\n\r\n//size \r\n$title-size: 20px;\r\n$normal-size: 16px;\r\n// sizing ----------------\x3e\r\n$heading-width: 70px; ","\r\n@media (max-width: 610px) {\r\n    .list-container {\r\n        padding: 0 50px 100px 25px !important;\r\n    }\r\n}",'@use "header";\r\n@use "sidebar";\r\n@use "main";\r\n@use "base";\r\n@use "utility";\r\n@use "mediaqueries";\r\n@use "var";\r\n@use "mixin";\r\n\r\nheader {\r\n    position: fixed;\r\n    align-items: center;\r\n    padding: 40px 25px;\r\n    gap: 20px;\r\n    @include mixin.flex-column;\r\n    width: var.$heading-width;\r\n    height: 100vh;\r\n    background-color: var.$heading-color;\r\n\r\n    .icon {\r\n        @include mixin.flex-center(row, center);\r\n        width: 40px;\r\n        height: 40px;\r\n        background-color: #555;\r\n        filter: grayscale(100%);\r\n    }\r\n}\r\n\r\nmain {\r\n    margin-left: var.$heading-width;\r\n    width: calc(100vw - #{var.$heading-width});\r\n    height: 100vh;\r\n    background-color: var.$main-color;\r\n    overflow-y: hidden;\r\n\r\n \r\n}\r\n\r\n.list-container {\r\n    padding: 0px 100px 100px 100px;\r\n    height: 100%;\r\n    overflow: auto;\r\n\r\n}\r\n.list-nav {\r\n    color: var.$listHeading-color;\r\n    padding: 40px 0 10px 0;\r\n    @include mixin.flex-center(row, space-between);\r\n    align-items: center;\r\n    border-bottom: var.$borderbottom-color;\r\n\r\n    .list-heading {\r\n        @include mixin.big-title;\r\n    }\r\n    .list-sort {\r\n        padding-right: 20px;\r\n        cursor: pointer;\r\n    }\r\n \r\n \r\n}\r\n\r\n\r\n.list-content {\r\n    padding-top: 15px;\r\n    color: var.$taskTitle-color;\r\n    user-select: none;\r\n    .task-heading {\r\n        @include mixin.med-title;\r\n        padding-bottom: 5px;\r\n    }\r\n\r\n    .task_list {\r\n        margin-bottom: 30px;\r\n    }\r\n}  \r\n\r\n.task_list_item {\r\n    @include mixin.task_list_item;\r\n    @include mixin.flex-center(row, space-between);\r\n    position: relative;\r\n    width: 100%;\r\n    height: 45px;\r\n    &:hover {\r\n        text-decoration: line-through;\r\n        cursor: pointer;\r\n        \r\n    }\r\n    .item_title {\r\n        font-size: var.$normal-size;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        overflow: hidden\r\n    }\r\n    .item_tools {\r\n        @include mixin.flex-center(row, center);\r\n    }\r\n\r\n   \r\n    \r\n}\r\n\r\n.plus_add_button {\r\n    @include mixin.flex-center(row, initial);\r\n    gap: 5px;\r\n    cursor: pointer;\r\n    padding-bottom: 5px;\r\n    user-select: none;\r\n    color: var.$placeholder-color;\r\n    &:hover {\r\n        color: var.$buttonText-color;\r\n        .plus-icon {\r\n            border-radius: 50px;\r\n            background-color: var.$plusIcon-color;\r\n        }\r\n    }\r\n    .plus-icon {\r\n        width: 20px;\r\n        height: 20px;\r\n        pointer-events: none\r\n    }\r\n    .add_task {\r\n        pointer-events: none\r\n    }\r\n}\r\n\r\n\r\n.edit_top {\r\n    @include mixin.task_list_item;\r\n}\r\n\r\n\r\n.edit_extra {\r\n    @include mixin.flex-center(row, space-between);\r\n    .edit_tools {\r\n        @include mixin.flex-center(row, initial);\r\n        margin: 10px 0;\r\n        gap: 10px;\r\n    \r\n        .edit_icon {\r\n            width: 70px;\r\n            height: 20px;\r\n            background-color: #555;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n.edit_buttons_container {\r\n    @include mixin.flex-center(row, initial);\r\n    \r\n    gap: 10px;\r\n}\r\n'],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r=n(e);return e[2]?"@media ".concat(e[2]," {").concat(r,"}"):r})).join("")},e.i=function(n,r,t){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(t)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);t&&o[d[0]]||(r&&(d[2]?d[2]="".concat(r," and ").concat(d[2]):d[2]=r),e.push(d))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=new Array(e);r<e;r++)t[r]=n[r];return t}n.exports=function(n){var r,t,o=(t=4,function(n){if(Array.isArray(n))return n}(r=n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var r=[],t=!0,o=!1,i=void 0;try{for(var a,A=n[Symbol.iterator]();!(t=(a=A.next()).done)&&(r.push(a.value),!e||r.length!==e);t=!0);}catch(n){o=!0,i=n}finally{try{t||null==A.return||A.return()}finally{if(o)throw i}}return r}}(r,t)||function(n,r){if(n){if("string"==typeof n)return e(n,r);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?e(n,r):void 0}}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),l="/*# ".concat(d," */"),s=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[i].concat(s).concat([l]).join("\n")}return[i].join("\n")}},379:(n,e,r)=>{var t,o=function(){var n={};return function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}n[e]=r}return n[e]}}(),i=[];function a(n){for(var e=-1,r=0;r<i.length;r++)if(i[r].identifier===n){e=r;break}return e}function A(n,e){for(var r={},t=[],o=0;o<n.length;o++){var A=n[o],d=e.base?A[0]+e.base:A[0],l=r[d]||0,s="".concat(d," ").concat(l);r[d]=l+1;var c=a(s),p={css:A[1],media:A[2],sourceMap:A[3]};-1!==c?(i[c].references++,i[c].updater(p)):i.push({identifier:s,updater:g(p,e),references:1}),t.push(s)}return t}function d(n){var e=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var i=r.nc;i&&(t.nonce=i)}if(Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(e);else{var a=o(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var l,s=(l=[],function(n,e){return l[n]=e,l.filter(Boolean).join("\n")});function c(n,e,r,t){var o=r?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=s(e,o);else{var i=document.createTextNode(o),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(i,a[e]):n.appendChild(i)}}function p(n,e,r){var t=r.css,o=r.media,i=r.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var C=null,u=0;function g(n,e){var r,t,o;if(e.singleton){var i=u++;r=C||(C=d(e)),t=c.bind(null,r,i,!1),o=c.bind(null,r,i,!0)}else r=d(e),t=p.bind(null,r,e),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)};return t(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t(n=e)}else o()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var r=A(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<r.length;t++){var o=a(r[t]);i[o].references--}for(var d=A(n,e),l=0;l<r.length;l++){var s=a(r[l]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}r=d}}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=r(379),e=r.n(n),t=r(802);e()(t.Z,{insert:"head",singleton:!1}),t.Z.locals;const o=n=>{const e=i.formLocation.get_Info().newForm,r=i.formLocation.get_Info().dateSection,t=i.formLocation.get_Info().task_title,o=document.createElement("li");o.classList.add("task_list_item"),console.log(t.value);const a=document.createRange().createContextualFragment(((n="No Title Given",e="item_due_today",r="Today")=>`\n        <div class='item_title'>${n}</div>\n            <div class='item_tools'>\n            <div class='${e}'>Due ${r}</div>\n            <div class='item_edit'><img class='edit-icon' src='/src/images/edit.svg'></div>\n        </div>`)(t.value));o.appendChild(a),r.insertBefore(o,e),t.value="",t.focus(),i.disable_AddTaskButton()},i=(()=>{let n=null;const e=e=>n=!0===e,r=()=>{i.get_Info().form_add_button.classList.add("disabled"),i.get_Info().form_add_button.disabled=!0},t=()=>{i.get_Info().form_add_button.removeEventListener("click",o),i.get_Info().form_cancel_button.removeEventListener("click",a)},i=(()=>{let n={};return{store_Info:(e,r,t,o,i)=>(n={dateSection:e,form_add_button:r,form_cancel_button:t,newForm:o,task_title:i},n),get_Info:()=>n}})(),a=n=>{const r=n.target.parentNode.parentNode,o=r.parentNode;t(),e(!1),A(o),r.remove()},A=n=>{const e=document.createElement("li");e.classList.add("plus_add_button");const r=document.createRange().createContextualFragment("\n    <img class='plus-icon' src='/src/images/plus.svg'>\n    <div class='item_title add_task'>Add task</div>\n");e.appendChild(r),n.appendChild(e)};return{create_Form:n=>{const t=document.createElement("li");t.classList.add("form_wrapper");const A=document.createRange().createContextualFragment("\n<div class=\"edit_top\">\n    <div class='edit_input'>\n        <input type='text' class='edit_title' placeholder=\"e.g. buy toothpaste\">\n    </div>\n    <div class='edit_extra'>\n        <div class='edit_tools'>\n            <div class=\"edit_icon\"></div>\n            <div class=\"edit_icon\"></div>\n        </div>\n    </div>\n</div>\n\n<div class='edit_bottom'>\n    <input type=\"button\" data-key='Enter' id='form_add_button' class='button-style1' value='Add Task'>\n    <input type=\"button\" data-key='Escape' id='form_cancel_button' class='button-style2' value='Cancel'>\n</div>");t.appendChild(A),n.appendChild(t);const d=t.querySelector(".edit_title"),l=t.lastChild.childNodes[1],s=t.lastChild.childNodes[3];s.addEventListener("click",a),l.addEventListener("click",o),d.focus(),e(!0),i.store_Info(n,l,s,t,d),r(),d.addEventListener("input",(n=>{n.target.value.length>0?(i.get_Info().form_add_button.classList.remove("disabled"),i.get_Info().form_add_button.disabled=!1):r()}))},removeAddTaskButton:n=>{n.remove()},updateIsFormEnabled:e,getIsFormEnabled:()=>n,formLocation:i,disable_AddTaskButton:r,remove_Form:()=>{t(),i.get_Info().newForm.remove(),A(i.get_Info().dateSection)}}})();document.querySelector(".list-container").addEventListener("click",(n=>{n.target.classList.contains("plus_add_button")&&(!0===i.getIsFormEnabled()&&i.remove_Form(),i.create_Form(n.target.parentNode),i.removeAddTaskButton(n.target))}),!0)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,