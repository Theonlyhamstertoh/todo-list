(()=>{"use strict";var n={802:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(15),o=r.n(t),i=r(645),a=r.n(i)()(o());a.push([n.id,'header{position:fixed;align-items:center;padding:40px 25px;gap:20px;display:flex;flex-direction:column;width:70px;height:100vh;background-color:#222}header .icon{display:flex;flex-direction:row;justify-content:center;align-items:center;width:40px;height:40px;background-color:#555;filter:grayscale(100%)}main{margin-left:70px;width:calc(100vw - 70px);height:100vh;background-color:#333;overflow-y:hidden}*{box-sizing:border-box;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif;margin:0;padding:0}li{list-style-type:none}.item_due-overdue{border-radius:50px;padding:2px 7px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;height:25px;background-color:#c02525}.item_due-today{border-radius:50px;padding:2px 7px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;height:25px;background-color:#d8b000}.item_due-someday{border-radius:50px;padding:2px 7px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;height:25px;background-color:#71c206}.form_title{outline:none;border:none;background-color:transparent;font-size:16px;color:rgba(255,255,255,.856);width:100%;height:100%;cursor:text}.subtask{padding-left:20px}.button-style1{outline:none;border:none;background-color:transparent;background-color:#3c91c2;color:rgba(255,255,255,.856);border-radius:10px;padding:7px;cursor:pointer}.button-style2{background-color:transparent;outline:none;border:none;background-color:transparent;color:rgba(255,255,255,.856);text-decoration:underline;cursor:pointer}::placeholder{color:rgba(202,202,202,.698)}.disabled{opacity:.4}@media(max-width: 610px){.list-container{padding:0 50px 100px 25px !important}}.popper{position:absolute;right:-40px;top:30px;background-color:#121212;padding:10px}.popper .drop_down_menu{display:flex;justify-content:flex-start;flex-direction:column}.list-container{padding:0px 100px 100px 100px;height:100%;overflow:auto}.list-nav{color:#ffffffc7;padding:40px 0 10px 0;display:flex;flex-direction:row;justify-content:space-between;align-items:center;align-items:center;border-bottom:1px solid rgba(204,204,204,.171)}.list-nav .list-heading{font-size:25px;font-weight:bold}.list-nav .list-sort{padding-right:20px;cursor:pointer}.list-content{padding-top:15px;color:rgba(255,255,255,.856);user-select:none}.list-content .task-heading{font-size:20px;font-weight:bold;padding-bottom:5px}.list-content .task_list{margin-bottom:30px}.task_list_item{padding:10px;border-radius:7px;margin:10px 0;background-color:#272727;box-shadow:inset -1px -1px 1px 1px rgba(110,110,110,.287);display:flex;flex-direction:row;justify-content:space-between;align-items:center;position:relative;width:100%;height:45px}.task_list_item .item_title{font-size:16px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;cursor:pointer}.task_list_item .item_tools{display:flex;flex-direction:row;justify-content:center;align-items:center;gap:2px}.task_list_item .item_tools .edit_icon{width:20px;height:20px;cursor:pointer}.task_list_item .item_tools .delete_icon{width:20px;height:16px;cursor:pointer}.plus_add_button{display:flex;flex-direction:row;justify-content:initial;align-items:center;gap:5px;cursor:pointer;padding-bottom:5px;user-select:none;color:rgba(202,202,202,.698)}.plus_add_button:hover{color:rgba(255,255,255,.856)}.plus_add_button:hover .plus-icon{border-radius:50px;background-color:#3c91c2}.plus_add_button .plus-icon{width:20px;height:20px;pointer-events:none}.plus_add_button .add_task{pointer-events:none}.form_top{padding:10px;border-radius:7px;margin:10px 0;background-color:#272727;box-shadow:inset -1px -1px 1px 1px rgba(110,110,110,.287)}.form_extra{display:flex;flex-direction:row;justify-content:space-between;align-items:center}.form_extra .form_tools{display:flex;flex-direction:row;justify-content:initial;align-items:center;margin:10px 0;gap:10px}.form_extra .form_tools .form_icon{height:20px;outline:none;border:none;background-color:transparent;background-color:#555;color:rgba(255,255,255,.856)}',"",{version:3,sources:["webpack://./_header.scss","webpack://./_mixin.scss","webpack://./_var.scss","webpack://./_main.scss","webpack://./_base.scss","webpack://./_utility.scss","webpack://./_mediaqueries.scss","webpack://./_tooltips.scss","webpack://./_list.scss","webpack://./_form.scss"],names:[],mappings:"AAGA,OACI,cAAA,CACA,kBAAA,CACA,iBAAA,CACA,QAAA,CCCA,YAAA,CACA,qBAAA,CAAA,UCsBY,CFrBZ,YAAA,CACA,qBENY,CFQZ,aCXA,YAAA,CACA,kBDW+B,CCV/B,sBDUoC,CCTpC,kBAAA,CDUI,UAAA,CACA,WAAA,CACA,qBAAA,CACA,sBAAA,CGdR,KACI,gBD0BY,CCzBZ,wBAAA,CACA,YAAA,CACA,qBDFS,CCGT,iBAAA,CCTJ,EACI,qBAAA,CACA,8HAAA,CACA,QAAA,CACA,SAAA,CAGJ,GACI,oBAAA,CCHJ,kBJmCI,kBAAA,CACA,eAAA,CACA,kBAAA,CACA,sBAAA,CACA,eAAA,CACA,WAAA,CItCA,wBHUc,CGNlB,gBJ6BI,kBAAA,CACA,eAAA,CACA,kBAAA,CACA,sBAAA,CACA,eAAA,CACA,WAAA,CIhCA,wBHKc,CAAA,kBDsBd,kBAAA,CACA,eAAA,CACA,kBAAA,CACA,sBAAA,CACA,eAAA,CACA,WAAA,CIzBA,wBHDc,CGMlB,YJSI,YAAA,CACA,WAAA,CACA,4BAAA,CITA,cHEU,CGDV,4BHfc,CGgBd,UAAA,CACA,WAAA,CACA,WAAA,CAGJ,SACI,iBAAA,CAEJ,eJHI,YAAA,CACA,WAAA,CACA,4BAAA,CIGA,wBAAA,CACA,4BHhBe,CGkBf,kBAAA,CACA,WAAA,CACA,cAAA,CAIJ,eACI,4BAAA,CJfA,YAAA,CACA,WAAA,CACA,4BAAA,CIeA,4BH3Be,CG4Bf,yBAAA,CACA,cAAA,CAIJ,cACI,4BHjCgB,CGoCpB,UACI,UAAA,CC7DJ,yBACI,gBACI,oCAAA,CAAA,CCCR,QACI,iBAAA,CACA,WAAA,CACA,QAAA,CAEA,wBAAA,CACA,YAAA,CACA,wBACI,YAAA,CACA,0BAAA,CACA,qBAAA,CCXR,gBACI,6BAAA,CACA,WAAA,CACA,aAAA,CAGJ,UACI,eNDgB,CMEhB,qBAAA,CPTA,YAAA,CACA,kBOS2B,CPR3B,6BOQgC,CPPhC,kBAAA,COQA,kBAAA,CACA,8CNJiB,CMMjB,wBPHA,cAAA,CACA,gBAAA,COKA,qBACI,kBAAA,CACA,cAAA,CAKR,cACI,gBAAA,CACA,4BNfc,CMgBd,gBAAA,CACA,4BPZA,cCUS,CDTT,gBAAA,COaI,kBAAA,CAGJ,yBACI,kBAAA,CAIR,gBPhBI,YAAA,CACA,iBAAA,CAEA,aAAA,CACA,wBCdmB,CDenB,yDAAA,CA3BA,YAAA,CACA,kBOuC2B,CPtC3B,6BOsCgC,CPrChC,kBAAA,COsCA,iBAAA,CACA,UAAA,CACA,WAAA,CAKA,4BACI,cNtBM,CMuBN,sBAAA,CACA,kBAAA,CACA,eAAA,CACA,cAAA,CAIJ,4BPzDA,YAAA,CACA,kBOyD+B,CPxD/B,sBOwDoC,CPvDpC,kBAAA,COwDI,OAAA,CACA,uCACI,UAAA,CACA,WAAA,CACA,cAAA,CAIJ,yCACI,UAAA,CACA,WAAA,CACA,cAAA,CAKZ,iBP3EI,YAAA,CACA,kBO2E2B,CP1E3B,uBO0EgC,CPzEhC,kBAAA,CO0EA,OAAA,CACA,cAAA,CACA,kBAAA,CACA,gBAAA,CACA,4BN1DgB,CM2DhB,uBACI,4BN7DW,CM8DX,kCACI,kBAAA,CACA,wBNlEK,CMqEb,4BACI,UAAA,CACA,WAAA,CACA,mBAAA,CAEJ,2BACI,mBAAA,CC9FR,URqBI,YAAA,CACA,iBAAA,CAEA,aAAA,CACA,wBCdmB,CDenB,yDAAA,CQrBJ,YRNI,YAAA,CACA,kBQM2B,CRL3B,6BQKgC,CRJhC,kBAAA,CQKA,wBRRA,YAAA,CACA,kBQQ+B,CRP/B,uBQOoC,CRNpC,kBAAA,CQOI,aAAA,CACA,QAAA,CAEA,mCACI,WAAA,CRkBR,YAAA,CACA,WAAA,CACA,4BAAA,CQlBQ,qBAAA,CACA,4BPNM",sourcesContent:['@use "var";\r\n@use "mixin";\r\n\r\nheader {\r\n    position: fixed;\r\n    align-items: center;\r\n    padding: 40px 25px;\r\n    gap: 20px;\r\n    @include mixin.flex-column;\r\n    width: var.$heading-width;\r\n    height: 100vh;\r\n    background-color: var.$heading-color;\r\n\r\n    .icon {\r\n        @include mixin.flex-center(row, center);\r\n        width: 40px;\r\n        height: 40px;\r\n        background-color: #555;\r\n        filter: grayscale(100%);\r\n    }\r\n}','@use "var";\r\n@mixin flex-center($flex-direction, $flex-content){\r\n    display: flex;\r\n    flex-direction: $flex-direction;\r\n    justify-content: $flex-content;\r\n    align-items: center;\r\n}\r\n@mixin flex-column {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n@mixin big-title {\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n}\r\n\r\n@mixin med-title {\r\n    font-size: var.$title-size;\r\n    font-weight: bold;\r\n}\r\n\r\n\r\n@mixin task_list_item {\r\n    padding: 10px;\r\n    border-radius: 7px;\r\n\r\n    margin: 10px 0;\r\n    background-color: var.$task-backgroundColor;\r\n    box-shadow: inset -1px -1px 1px 1px rgba(110, 110, 110, 0.287)\r\n}\r\n\r\n\r\n@mixin remove_border-outline {\r\n    outline: none;\r\n    border: none;\r\n    background-color: transparent;\r\n}\r\n\r\n@mixin date-padding {\r\n    border-radius: 50px;\r\n    padding: 2px 7px;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    height: 25px;\r\n}\r\n',"//dark theme mode\r\n\r\n// Color -----------------\x3e       \r\n\r\n//base\r\n$heading-color: #222222;\r\n$main-color: #333333;\r\n\r\n// list\r\n$listHeading-color: #ffffffc7;\r\n$borderbottom-color: 1px solid rgba(204, 204, 204, 0.171);  \r\n\r\n//task\r\n$taskTitle-color: rgba(255, 255, 255, 0.856);\r\n$task-backgroundColor: rgb(39, 39, 39);\r\n\r\n//due date \r\n$task-dateColor1: rgb(192, 37, 37);\r\n$task-dateColor2: rgb(216, 176, 0);\r\n$task-dateColor3: rgb(113, 194, 6);\r\n\r\n//add task \r\n$plusIcon-color: rgb(60, 145, 194);  \r\n// edit button \r\n$buttonText-color: rgba(255, 255, 255, 0.856);\r\n$placeholder-color: rgba(202, 202, 202, 0.698);\r\n\r\n//size \r\n$title-size: 20px;\r\n$normal-size: 16px;\r\n// sizing ----------------\x3e\r\n$heading-width: 70px; ",'@use "var";\r\n@use "mixin";\r\n\r\n\r\nmain {\r\n    margin-left: var.$heading-width;\r\n    width: calc(100vw - #{var.$heading-width});\r\n    height: 100vh;\r\n    background-color: var.$main-color;\r\n    overflow-y: hidden;\r\n\r\n \r\n}\r\n',"* {\r\n    box-sizing: border-box;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nli {\r\n    list-style-type: none;\r\n}",'// Utility classes that give generally common styling and can be used in many places\r\n\r\n@use "var";\r\n@use "mixin";\r\n\r\n.item_due-overdue {\r\n    @include mixin.date-padding;\r\n    background-color: var.$task-dateColor1;\r\n\r\n}\r\n\r\n.item_due-today {\r\n    @include mixin.date-padding;\r\n    background-color: var.$task-dateColor2;\r\n\r\n\r\n}\r\n\r\n.item_due-someday {\r\n    @include mixin.date-padding;\r\n    background-color: var.$task-dateColor3;\r\n}\r\n\r\n\r\n\r\n.form_title {\r\n    @include mixin.remove_border-outline;\r\n    font-size: var.$normal-size;\r\n    color: var.$taskTitle-color;\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: text;\r\n}\r\n\r\n.subtask {\r\n    padding-left: 20px;\r\n}\r\n.button-style1 {\r\n    @include mixin.remove_border-outline;\r\n    background-color: rgb(60, 145, 194);\r\n    color: var.$buttonText-color;\r\n\r\n    border-radius: 10px;\r\n    padding: 7px;\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n.button-style2 {\r\n    background-color: transparent;\r\n    @include mixin.remove_border-outline;\r\n    color: var.$buttonText-color;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n}\r\n\r\n\r\n::placeholder {\r\n    color: var.$placeholder-color;\r\n}\r\n\r\n.disabled {\r\n    opacity: 0.4;\r\n}',"\r\n@media (max-width: 610px) {\r\n    .list-container {\r\n        padding: 0 50px 100px 25px !important;\r\n    }\r\n}",'@use "var";\r\n@use "mixin";\r\n\r\n\r\n.popper  {\r\n    position: absolute;\r\n    right: -40px;\r\n    top: 30px;\r\n    // visibility: hidden;\r\n    background-color: #121212;\r\n    padding: 10px;\r\n    .drop_down_menu {\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        flex-direction:  column;\r\n\r\n\r\n        \r\n        \r\n    }\r\n}','@use "var";\r\n@use "mixin";\r\n\r\n.list-container {\r\n    padding: 0px 100px 100px 100px;\r\n    height: 100%;\r\n    overflow: auto;\r\n}\r\n\r\n.list-nav {\r\n    color: var.$listHeading-color;\r\n    padding: 40px 0 10px 0;\r\n    @include mixin.flex-center(row, space-between);\r\n    align-items: center;\r\n    border-bottom: var.$borderbottom-color;\r\n\r\n    .list-heading {\r\n        @include mixin.big-title;\r\n    }\r\n    .list-sort {\r\n        padding-right: 20px;\r\n        cursor: pointer;\r\n    }\r\n}\r\n\r\n\r\n.list-content {\r\n    padding-top: 15px;\r\n    color: var.$taskTitle-color;\r\n    user-select: none;\r\n    .task-heading {\r\n        @include mixin.med-title;\r\n        padding-bottom: 5px;\r\n    }\r\n\r\n    .task_list {\r\n        margin-bottom: 30px;\r\n    }\r\n}  \r\n\r\n.task_list_item {\r\n    @include mixin.task_list_item;\r\n    @include mixin.flex-center(row, space-between);\r\n    position: relative;\r\n    width: 100%;\r\n    height: 45px;\r\n    &:hover {\r\n\r\n        \r\n    }\r\n    .item_title {\r\n        font-size: var.$normal-size;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        cursor: pointer;\r\n\r\n\r\n    }\r\n    .item_tools {\r\n        @include mixin.flex-center(row, center);\r\n        gap: 2px;\r\n        .edit_icon {\r\n            width: 20px;\r\n            height: 20px;\r\n            cursor: pointer;\r\n        }\r\n\r\n        \r\n        .delete_icon {\r\n            width: 20px;\r\n            height: 16px;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n}\r\n\r\n.plus_add_button {\r\n    @include mixin.flex-center(row, initial);\r\n    gap: 5px;\r\n    cursor: pointer;\r\n    padding-bottom: 5px;\r\n    user-select: none;\r\n    color: var.$placeholder-color;\r\n    &:hover {\r\n        color: var.$buttonText-color;\r\n        .plus-icon {\r\n            border-radius: 50px;\r\n            background-color: var.$plusIcon-color;\r\n        }\r\n    }\r\n    .plus-icon {\r\n        width: 20px;\r\n        height: 20px;\r\n        pointer-events: none\r\n    }\r\n    .add_task {\r\n        pointer-events: none\r\n    }\r\n}\r\n\r\n','@use "var";\r\n@use "mixin";\r\n\r\n.form_top {\r\n    @include mixin.task_list_item;\r\n}\r\n\r\n\r\n.form_extra {\r\n    @include mixin.flex-center(row, space-between);\r\n    .form_tools {\r\n        @include mixin.flex-center(row, initial);\r\n        margin: 10px 0;\r\n        gap: 10px;\r\n    \r\n        .form_icon {\r\n            height: 20px;\r\n            @include mixin.remove_border-outline;\r\n            background-color: #555;\r\n            color: var.$taskTitle-color\r\n        }\r\n    }\r\n}\r\n'],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r=n(e);return e[2]?"@media ".concat(e[2]," {").concat(r,"}"):r})).join("")},e.i=function(n,r,t){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(t)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);t&&o[s[0]]||(r&&(s[2]?s[2]="".concat(r," and ").concat(s[2]):s[2]=r),e.push(s))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=new Array(e);r<e;r++)t[r]=n[r];return t}n.exports=function(n){var r,t,o=(t=4,function(n){if(Array.isArray(n))return n}(r=n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var r=[],t=!0,o=!1,i=void 0;try{for(var a,A=n[Symbol.iterator]();!(t=(a=A.next()).done)&&(r.push(a.value),!e||r.length!==e);t=!0);}catch(n){o=!0,i=n}finally{try{t||null==A.return||A.return()}finally{if(o)throw i}}return r}}(r,t)||function(n,r){if(n){if("string"==typeof n)return e(n,r);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?e(n,r):void 0}}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),l="/*# ".concat(s," */"),d=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[i].concat(d).concat([l]).join("\n")}return[i].join("\n")}},379:(n,e,r)=>{var t,o=function(){var n={};return function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}n[e]=r}return n[e]}}(),i=[];function a(n){for(var e=-1,r=0;r<i.length;r++)if(i[r].identifier===n){e=r;break}return e}function A(n,e){for(var r={},t=[],o=0;o<n.length;o++){var A=n[o],s=e.base?A[0]+e.base:A[0],l=r[s]||0,d="".concat(s," ").concat(l);r[s]=l+1;var c=a(d),p={css:A[1],media:A[2],sourceMap:A[3]};-1!==c?(i[c].references++,i[c].updater(p)):i.push({identifier:d,updater:g(p,e),references:1}),t.push(d)}return t}function s(n){var e=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var i=r.nc;i&&(t.nonce=i)}if(Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(e);else{var a=o(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var l,d=(l=[],function(n,e){return l[n]=e,l.filter(Boolean).join("\n")});function c(n,e,r,t){var o=r?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=d(e,o);else{var i=document.createTextNode(o),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(i,a[e]):n.appendChild(i)}}function p(n,e,r){var t=r.css,o=r.media,i=r.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var u=null,C=0;function g(n,e){var r,t,o;if(e.singleton){var i=C++;r=u||(u=s(e)),t=c.bind(null,r,i,!1),o=c.bind(null,r,i,!0)}else r=s(e),t=p.bind(null,r,e),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)};return t(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t(n=e)}else o()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var r=A(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<r.length;t++){var o=a(r[t]);i[o].references--}for(var s=A(n,e),l=0;l<r.length;l++){var d=a(r[l]);0===i[d].references&&(i[d].updater(),i.splice(d,1))}r=s}}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=r(379),e=r.n(n),t=r(802);e()(t.Z,{insert:"head",singleton:!1}),t.Z.locals;const o=[],i=()=>{const n=l.get_Info().task_title,e=l.get_Info().task_dueDate,r=l.get_Info().task_importance,t=(l.get_Info().task_color,new class{constructor(n,e="No Date",r="none"){this._id=(new Date).getTime(),this._title=n,this._dueDate=e,this._importance=r}set title(n){this._title=n}get title(){return this._title}set date(n){this._dueDate=n}get date(){return this._dueDate}get importance(){return this._importance}set importance(n){n&&(this._importance=n)}createObject(){const n=l.get_Info().newForm,e=l.get_Info().dateSection,r=document.createElement("li");r.dataset.id=this._id,r.classList.add("task_list_item");const t=document.createRange().createContextualFragment(((n="No Title Given",e="item_due-today",r="Today")=>`\n        <div class='item_title'>${n}</div>\n            <div class='item_tools'>\n            <div class='item_due-today'>Due ${r}</div>\n            <img class='edit_icon' src='/src/images/task_edit_icon.svg'>\n            <img class='delete_icon' src='/src/images/trash.svg'>\n\n\n        </div>`)(this._title,this._dueDate));r.appendChild(t),e.insertBefore(r,n)}editObject(){}}(n.value,e.value,r.value));o.push(t),t.createObject(),n.value="",n.focus(),A.disable()},a=(()=>{let n=null;const e=e=>n=!0===e,r=()=>{l.get_Info().form_add_button.removeEventListener("click",i),l.get_Info().form_cancel_button.removeEventListener("click",r),window.removeEventListener("keydown",s),e(!1),l.get_Info().newForm.remove(),A.create(l.get_Info().dateSection)};return{create:n=>{const t=document.createElement("li");t.classList.add("form_wrapper");const o=document.createRange().createContextualFragment("\n<div class=\"form_top\">\n    <div class='form_input'>\n        <input type='text' class='form_title' placeholder=\"e.g. buy toothpaste\">\n    </div>\n    <div class='form_extra'>\n        <div class='form_tools'>\n            <input type='date' class=\"form_icon\">\n            <select name='importance' class=\"form_icon\">\n                <option data-priority='high'>Low</option>\n                <option data-priority='med'>Medium</option>\n                <option data-priority='low'>High</option>\n            </select>\n            <select name='color' class=\"form_icon\">\n                <option data-priority='red'>red</option>\n                <option data-priority='blue'>blue</option>\n                <option data-priority='yellow'>yellow</option>\n                <option data-priority='green'>green</option>\n                <option data-priority='gray'>gray</option>\n            </select>\n        </div>\n    </div>\n</div>\n\n<div class='form_bottom'>\n    <input type=\"button\" data-key='Enter' id='form_add_button' class='button-style1' value='Add Task'>\n    <input type=\"button\" data-key='Escape id='form_cancel_button' class='button-style2' value='Cancel'>\n</div>");t.appendChild(o),n.appendChild(t);const a=t.querySelector(".form_title"),d=t.querySelector("input[type='date']"),c=t.querySelector("[name='color']"),p=t.lastChild.childNodes[1],u=t.lastChild.childNodes[3],C=t.querySelector('[name="importance"]');u.addEventListener("click",r),p.addEventListener("click",i),a.focus(),e(!0),l.store_Info(n,p,u,t,a,d,C,c),A.disable(),l.get_Info().task_title.addEventListener("input",(n=>{n.target.value.length>0?A.enable():A.disable()})),window.addEventListener("keydown",s)},updateIsFormEnabled:e,getIsFormEnabled:()=>n,remove:r}})(),A={remove:n=>{n.remove()},create:n=>{const e=document.createElement("li");e.classList.add("plus_add_button");const r=document.createRange().createContextualFragment("\n    <img class='plus-icon' src='/src/images/plus.svg'>\n    <div class='item_title add_task'>Add task</div>\n");e.appendChild(r),n.appendChild(e)},disable:()=>{l.get_Info().form_add_button.classList.add("disabled"),l.get_Info().form_add_button.disabled=!0},enable:()=>{l.get_Info().form_add_button.classList.remove("disabled"),l.get_Info().form_add_button.disabled=!1}},s=n=>"Escape"===n.key?a.remove():"Enter"===n.key&&l.get_Info().task_title.value.length>0?i():void 0,l=(()=>{let n={};return{store_Info:(e,r,t,o,i,a,A,s)=>(n={dateSection:e,form_add_button:r,form_cancel_button:t,newForm:o,task_title:i,task_dueDate:a,task_importance:A,task_color:s},n),get_Info:()=>n}})();window.addEventListener("click",(n=>{if(n.target.classList.contains("plus_add_button")&&(!0===a.getIsFormEnabled()&&a.remove(),a.create(n.target.parentNode),A.remove(n.target)),n.target.classList.contains("delete_icon")){const e=n.target.parentNode.parentNode,r=parseInt(e.dataset.id);o.forEach((n=>{n._id===r&&(o.splice(o.indexOf(n),1),e.remove())}))}}),!1)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc2Nzcy9zdHlsZS5zY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc2Nzcy9zdHlsZS5zY3NzP2M0NGUiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2pzL3Rhc2tzL3Rhc2tDb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvanMvdGFza3MvdGFzay5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvanMvaHRtbC10YWdzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9qcy90YXNrcy9zaG93Rm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvanMvZG9tQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwiY29uY2F0Iiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWFRdWVyeSIsImRlZHVwZSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJsZW5ndGgiLCJfaSIsIl9hcnJheUxpa2VUb0FycmF5IiwiYXJyIiwibGVuIiwiYXJyMiIsIkFycmF5IiwiX2l0ZW0iLCJpc0FycmF5IiwiX2FycmF5V2l0aEhvbGVzIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJPYmplY3QiLCJfYXJyIiwiX24iLCJfZCIsIl9lIiwidW5kZWZpbmVkIiwiX3MiLCJuZXh0IiwiZG9uZSIsInZhbHVlIiwiZXJyIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwibyIsIm1pbkxlbiIsIm4iLCJwcm90b3R5cGUiLCJjYWxsIiwic2xpY2UiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIlR5cGVFcnJvciIsIl9ub25JdGVyYWJsZVJlc3QiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwibWVtbyIsImdldFRhcmdldCIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4Iiwib2JqIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZFN0eWxlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGUiLCJjcmVhdGVFbGVtZW50IiwiYXR0cmlidXRlcyIsIm5vbmNlIiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJhcHBseVRvU2luZ2xldG9uVGFnIiwicmVtb3ZlIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJjaGlsZE5vZGVzIiwicmVtb3ZlQ2hpbGQiLCJpbnNlcnRCZWZvcmUiLCJhcHBseVRvVGFnIiwicmVtb3ZlQXR0cmlidXRlIiwiZmlyc3RDaGlsZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwiYmluZCIsInBhcmVudE5vZGUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJuZXdPYmoiLCJhbGwiLCJhdG9iIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsInNwbGljZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsImhhc093blByb3BlcnR5IiwidGFza0FycmF5IiwiYWRkVGFzayIsInRhc2tfdGl0bGUiLCJmb3JtTG9jYXRpb24iLCJnZXRfSW5mbyIsInRhc2tfZHVlRGF0ZSIsInRhc2tfaW1wb3J0YW5jZSIsIm5ld1Rhc2tPYmplY3QiLCJ0YXNrX2NvbG9yIiwidGl0bGUiLCJkdWVEYXRlIiwiaW1wb3J0YW5jZSIsIl9pZCIsIkRhdGUiLCJnZXRUaW1lIiwiX3RpdGxlIiwiX2R1ZURhdGUiLCJfaW1wb3J0YW5jZSIsIm5ld1RpdGxlIiwibmV3RHVlRGF0ZSIsImZvcm1fd3JhcHBlciIsIm5ld0Zvcm0iLCJkYXRlU2VjdGlvbiIsIm5ld1Rhc2siLCJkYXRhc2V0IiwiY2xhc3NMaXN0IiwiYWRkIiwidGFza0hUTUwiLCJjcmVhdGVSYW5nZSIsImNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudCIsImRhdGVTdHlsZVR5cGUiLCJkYXRlIiwiY3JlYXRlT2JqZWN0IiwiZm9jdXMiLCJzaG93Rm9ybSIsIklzRm9ybUVuYWJsZWQiLCJ1cGRhdGVJc0Zvcm1FbmFibGVkIiwiZm9ybV9hZGRfYnV0dG9uIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImZvcm1fY2FuY2VsX2J1dHRvbiIsImRldGVjdEtleVByZXNzIiwiY3JlYXRlIiwiZm9ybUhUTUwiLCJsYXN0Q2hpbGQiLCJhZGRFdmVudExpc3RlbmVyIiwic3RvcmVfSW5mbyIsImRpc2FibGUiLCJlbmFibGUiLCJnZXRJc0Zvcm1FbmFibGVkIiwidGhlQnV0dG9uIiwibmV3QWRkVGFza0J0biIsImFkZFRhc2tGcmFnbWVudEhUTWwiLCJkaXNhYmxlZCIsImZvcm1JbmZvIiwiY29udGFpbnMiLCJpdGVtVG9CZURlbGV0ZWQiLCJpdGVtVG9CZURlbGV0ZWRfSUQiLCJwYXJzZUludCIsImVsIiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6InVGQUdJQSxFLE1BQTBCLEdBQTRCLEtBRTFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLHk3SEFBZzhILEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLDJCQUEyQiwwQkFBMEIsd0JBQXdCLHlCQUF5Qix5QkFBeUIsNEJBQTRCLGlDQUFpQyw2QkFBNkIseUJBQXlCLDBCQUEwQixNQUFRLEdB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QVNGLEVBQWdCL0IsUUFBUWxMLElBRTVEMEosRUFBVXJELFNBQVErRyxJQUNYQSxFQUFHOUMsTUFBUTRDLElBQ1Z4RCxFQUFVaEIsT0FBT2dCLEVBQVUyRCxRQUFRRCxHQUFLLEdBQ3hDSCxFQUFnQmhHLGlCQVFnQixJIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImhlYWRlcntwb3NpdGlvbjpmaXhlZDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZzo0MHB4IDI1cHg7Z2FwOjIwcHg7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjt3aWR0aDo3MHB4O2hlaWdodDoxMDB2aDtiYWNrZ3JvdW5kLWNvbG9yOiMyMjJ9aGVhZGVyIC5pY29ue2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3c7anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7d2lkdGg6NDBweDtoZWlnaHQ6NDBweDtiYWNrZ3JvdW5kLWNvbG9yOiM1NTU7ZmlsdGVyOmdyYXlzY2FsZSgxMDAlKX1tYWlue21hcmdpbi1sZWZ0OjcwcHg7d2lkdGg6Y2FsYygxMDB2dyAtIDcwcHgpO2hlaWdodDoxMDB2aDtiYWNrZ3JvdW5kLWNvbG9yOiMzMzM7b3ZlcmZsb3cteTpoaWRkZW59Kntib3gtc2l6aW5nOmJvcmRlci1ib3g7Zm9udC1mYW1pbHk6LWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsXFxcIlNlZ29lIFVJXFxcIixSb2JvdG8sT3h5Z2VuLFVidW50dSxDYW50YXJlbGwsXFxcIk9wZW4gU2Fuc1xcXCIsXFxcIkhlbHZldGljYSBOZXVlXFxcIixzYW5zLXNlcmlmO21hcmdpbjowO3BhZGRpbmc6MH1saXtsaXN0LXN0eWxlLXR5cGU6bm9uZX0uaXRlbV9kdWUtb3ZlcmR1ZXtib3JkZXItcmFkaXVzOjUwcHg7cGFkZGluZzoycHggN3B4O3doaXRlLXNwYWNlOm5vd3JhcDt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO292ZXJmbG93OmhpZGRlbjtoZWlnaHQ6MjVweDtiYWNrZ3JvdW5kLWNvbG9yOiNjMDI1MjV9Lml0ZW1fZHVlLXRvZGF5e2JvcmRlci1yYWRpdXM6NTBweDtwYWRkaW5nOjJweCA3cHg7d2hpdGUtc3BhY2U6bm93cmFwO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7b3ZlcmZsb3c6aGlkZGVuO2hlaWdodDoyNXB4O2JhY2tncm91bmQtY29sb3I6I2Q4YjAwMH0uaXRlbV9kdWUtc29tZWRheXtib3JkZXItcmFkaXVzOjUwcHg7cGFkZGluZzoycHggN3B4O3doaXRlLXNwYWNlOm5vd3JhcDt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO292ZXJmbG93OmhpZGRlbjtoZWlnaHQ6MjVweDtiYWNrZ3JvdW5kLWNvbG9yOiM3MWMyMDZ9LmZvcm1fdGl0bGV7b3V0bGluZTpub25lO2JvcmRlcjpub25lO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Zm9udC1zaXplOjE2cHg7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuODU2KTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2N1cnNvcjp0ZXh0fS5zdWJ0YXNre3BhZGRpbmctbGVmdDoyMHB4fS5idXR0b24tc3R5bGUxe291dGxpbmU6bm9uZTtib3JkZXI6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JhY2tncm91bmQtY29sb3I6IzNjOTFjMjtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC44NTYpO2JvcmRlci1yYWRpdXM6MTBweDtwYWRkaW5nOjdweDtjdXJzb3I6cG9pbnRlcn0uYnV0dG9uLXN0eWxlMntiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O291dGxpbmU6bm9uZTtib3JkZXI6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjg1Nik7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTtjdXJzb3I6cG9pbnRlcn06OnBsYWNlaG9sZGVye2NvbG9yOnJnYmEoMjAyLDIwMiwyMDIsLjY5OCl9LmRpc2FibGVke29wYWNpdHk6LjR9QG1lZGlhKG1heC13aWR0aDogNjEwcHgpey5saXN0LWNvbnRhaW5lcntwYWRkaW5nOjAgNTBweCAxMDBweCAyNXB4ICFpbXBvcnRhbnR9fS5wb3BwZXJ7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6LTQwcHg7dG9wOjMwcHg7YmFja2dyb3VuZC1jb2xvcjojMTIxMjEyO3BhZGRpbmc6MTBweH0ucG9wcGVyIC5kcm9wX2Rvd25fbWVudXtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1ufS5saXN0LWNvbnRhaW5lcntwYWRkaW5nOjBweCAxMDBweCAxMDBweCAxMDBweDtoZWlnaHQ6MTAwJTtvdmVyZmxvdzphdXRvfS5saXN0LW5hdntjb2xvcjojZmZmZmZmYzc7cGFkZGluZzo0MHB4IDAgMTBweCAwO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3c7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47YWxpZ24taXRlbXM6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDIwNCwyMDQsMjA0LC4xNzEpfS5saXN0LW5hdiAubGlzdC1oZWFkaW5ne2ZvbnQtc2l6ZToyNXB4O2ZvbnQtd2VpZ2h0OmJvbGR9Lmxpc3QtbmF2IC5saXN0LXNvcnR7cGFkZGluZy1yaWdodDoyMHB4O2N1cnNvcjpwb2ludGVyfS5saXN0LWNvbnRlbnR7cGFkZGluZy10b3A6MTVweDtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC44NTYpO3VzZXItc2VsZWN0Om5vbmV9Lmxpc3QtY29udGVudCAudGFzay1oZWFkaW5ne2ZvbnQtc2l6ZToyMHB4O2ZvbnQtd2VpZ2h0OmJvbGQ7cGFkZGluZy1ib3R0b206NXB4fS5saXN0LWNvbnRlbnQgLnRhc2tfbGlzdHttYXJnaW4tYm90dG9tOjMwcHh9LnRhc2tfbGlzdF9pdGVte3BhZGRpbmc6MTBweDtib3JkZXItcmFkaXVzOjdweDttYXJnaW46MTBweCAwO2JhY2tncm91bmQtY29sb3I6IzI3MjcyNztib3gtc2hhZG93Omluc2V0IC0xcHggLTFweCAxcHggMXB4IHJnYmEoMTEwLDExMCwxMTAsLjI4Nyk7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvdztqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjthbGlnbi1pdGVtczpjZW50ZXI7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtoZWlnaHQ6NDVweH0udGFza19saXN0X2l0ZW0gLml0ZW1fdGl0bGV7Zm9udC1zaXplOjE2cHg7dGV4dC1vdmVyZmxvdzplbGxpcHNpczt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVuO2N1cnNvcjpwb2ludGVyfS50YXNrX2xpc3RfaXRlbSAuaXRlbV90b29sc3tkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO2dhcDoycHh9LnRhc2tfbGlzdF9pdGVtIC5pdGVtX3Rvb2xzIC5lZGl0X2ljb257d2lkdGg6MjBweDtoZWlnaHQ6MjBweDtjdXJzb3I6cG9pbnRlcn0udGFza19saXN0X2l0ZW0gLml0ZW1fdG9vbHMgLmRlbGV0ZV9pY29ue3dpZHRoOjIwcHg7aGVpZ2h0OjE2cHg7Y3Vyc29yOnBvaW50ZXJ9LnBsdXNfYWRkX2J1dHRvbntkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93O2p1c3RpZnktY29udGVudDppbml0aWFsO2FsaWduLWl0ZW1zOmNlbnRlcjtnYXA6NXB4O2N1cnNvcjpwb2ludGVyO3BhZGRpbmctYm90dG9tOjVweDt1c2VyLXNlbGVjdDpub25lO2NvbG9yOnJnYmEoMjAyLDIwMiwyMDIsLjY5OCl9LnBsdXNfYWRkX2J1dHRvbjpob3Zlcntjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC44NTYpfS5wbHVzX2FkZF9idXR0b246aG92ZXIgLnBsdXMtaWNvbntib3JkZXItcmFkaXVzOjUwcHg7YmFja2dyb3VuZC1jb2xvcjojM2M5MWMyfS5wbHVzX2FkZF9idXR0b24gLnBsdXMtaWNvbnt3aWR0aDoyMHB4O2hlaWdodDoyMHB4O3BvaW50ZXItZXZlbnRzOm5vbmV9LnBsdXNfYWRkX2J1dHRvbiAuYWRkX3Rhc2t7cG9pbnRlci1ldmVudHM6bm9uZX0uZm9ybV90b3B7cGFkZGluZzoxMHB4O2JvcmRlci1yYWRpdXM6N3B4O21hcmdpbjoxMHB4IDA7YmFja2dyb3VuZC1jb2xvcjojMjcyNzI3O2JveC1zaGFkb3c6aW5zZXQgLTFweCAtMXB4IDFweCAxcHggcmdiYSgxMTAsMTEwLDExMCwuMjg3KX0uZm9ybV9leHRyYXtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2FsaWduLWl0ZW1zOmNlbnRlcn0uZm9ybV9leHRyYSAuZm9ybV90b29sc3tkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93O2p1c3RpZnktY29udGVudDppbml0aWFsO2FsaWduLWl0ZW1zOmNlbnRlcjttYXJnaW46MTBweCAwO2dhcDoxMHB4fS5mb3JtX2V4dHJhIC5mb3JtX3Rvb2xzIC5mb3JtX2ljb257aGVpZ2h0OjIwcHg7b3V0bGluZTpub25lO2JvcmRlcjpub25lO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7YmFja2dyb3VuZC1jb2xvcjojNTU1O2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjg1Nil9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vX2hlYWRlci5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9fbWl4aW4uc2Nzc1wiLFwid2VicGFjazovLy4vX3Zhci5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9fbWFpbi5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9fYmFzZS5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9fdXRpbGl0eS5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9fbWVkaWFxdWVyaWVzLnNjc3NcIixcIndlYnBhY2s6Ly8uL190b29sdGlwcy5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9fbGlzdC5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9fZm9ybS5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUdBLE9BQ0ksY0FBQSxDQUNBLGtCQUFBLENBQ0EsaUJBQUEsQ0FDQSxRQUFBLENDQ0EsWUFBQSxDQUNBLHFCQUFBLENBQUEsVUNzQlksQ0ZyQlosWUFBQSxDQUNBLHFCRU5ZLENGUVosYUNYQSxZQUFBLENBQ0Esa0JEVytCLENDVi9CLHNCRFVvQyxDQ1RwQyxrQkFBQSxDRFVJLFVBQUEsQ0FDQSxXQUFBLENBQ0EscUJBQUEsQ0FDQSxzQkFBQSxDR2RSLEtBQ0ksZ0JEMEJZLENDekJaLHdCQUFBLENBQ0EsWUFBQSxDQUNBLHFCREZTLENDR1QsaUJBQUEsQ0NUSixFQUNJLHFCQUFBLENBQ0EsOEhBQUEsQ0FDQSxRQUFBLENBQ0EsU0FBQSxDQUdKLEdBQ0ksb0JBQUEsQ0NISixrQkptQ0ksa0JBQUEsQ0FDQSxlQUFBLENBQ0Esa0JBQUEsQ0FDQSxzQkFBQSxDQUNBLGVBQUEsQ0FDQSxXQUFBLENJdENBLHdCSFVjLENHTmxCLGdCSjZCSSxrQkFBQSxDQUNBLGVBQUEsQ0FDQSxrQkFBQSxDQUNBLHNCQUFBLENBQ0EsZUFBQSxDQUNBLFdBQUEsQ0loQ0Esd0JIS2MsQ0FBQSxrQkRzQmQsa0JBQUEsQ0FDQSxlQUFBLENBQ0Esa0JBQUEsQ0FDQSxzQkFBQSxDQUNBLGVBQUEsQ0FDQSxXQUFBLENJekJBLHdCSERjLENHTWxCLFlKU0ksWUFBQSxDQUNBLFdBQUEsQ0FDQSw0QkFBQSxDSVRBLGNIRVUsQ0dEViw0QkhmYyxDR2dCZCxVQUFBLENBQ0EsV0FBQSxDQUNBLFdBQUEsQ0FHSixTQUNJLGlCQUFBLENBRUosZUpISSxZQUFBLENBQ0EsV0FBQSxDQUNBLDRCQUFBLENJR0Esd0JBQUEsQ0FDQSw0QkhoQmUsQ0drQmYsa0JBQUEsQ0FDQSxXQUFBLENBQ0EsY0FBQSxDQUlKLGVBQ0ksNEJBQUEsQ0pmQSxZQUFBLENBQ0EsV0FBQSxDQUNBLDRCQUFBLENJZUEsNEJIM0JlLENHNEJmLHlCQUFBLENBQ0EsY0FBQSxDQUlKLGNBQ0ksNEJIakNnQixDR29DcEIsVUFDSSxVQUFBLENDN0RKLHlCQUNJLGdCQUNJLG9DQUFBLENBQUEsQ0NDUixRQUNJLGlCQUFBLENBQ0EsV0FBQSxDQUNBLFFBQUEsQ0FFQSx3QkFBQSxDQUNBLFlBQUEsQ0FDQSx3QkFDSSxZQUFBLENBQ0EsMEJBQUEsQ0FDQSxxQkFBQSxDQ1hSLGdCQUNJLDZCQUFBLENBQ0EsV0FBQSxDQUNBLGFBQUEsQ0FHSixVQUNJLGVORGdCLENNRWhCLHFCQUFBLENQVEEsWUFBQSxDQUNBLGtCT1MyQixDUFIzQiw2Qk9RZ0MsQ1BQaEMsa0JBQUEsQ09RQSxrQkFBQSxDQUNBLDhDTkppQixDTU1qQix3QlBIQSxjQUFBLENBQ0EsZ0JBQUEsQ09LQSxxQkFDSSxrQkFBQSxDQUNBLGNBQUEsQ0FLUixjQUNJLGdCQUFBLENBQ0EsNEJOZmMsQ01nQmQsZ0JBQUEsQ0FDQSw0QlBaQSxjQ1VTLENEVFQsZ0JBQUEsQ09hSSxrQkFBQSxDQUdKLHlCQUNJLGtCQUFBLENBSVIsZ0JQaEJJLFlBQUEsQ0FDQSxpQkFBQSxDQUVBLGFBQUEsQ0FDQSx3QkNkbUIsQ0RlbkIseURBQUEsQ0EzQkEsWUFBQSxDQUNBLGtCT3VDMkIsQ1B0QzNCLDZCT3NDZ0MsQ1ByQ2hDLGtCQUFBLENPc0NBLGlCQUFBLENBQ0EsVUFBQSxDQUNBLFdBQUEsQ0FLQSw0QkFDSSxjTnRCTSxDTXVCTixzQkFBQSxDQUNBLGtCQUFBLENBQ0EsZUFBQSxDQUNBLGNBQUEsQ0FJSiw0QlB6REEsWUFBQSxDQUNBLGtCT3lEK0IsQ1B4RC9CLHNCT3dEb0MsQ1B2RHBDLGtCQUFBLENPd0RJLE9BQUEsQ0FDQSx1Q0FDSSxVQUFBLENBQ0EsV0FBQSxDQUNBLGNBQUEsQ0FJSix5Q0FDSSxVQUFBLENBQ0EsV0FBQSxDQUNBLGNBQUEsQ0FLWixpQlAzRUksWUFBQSxDQUNBLGtCTzJFMkIsQ1AxRTNCLHVCTzBFZ0MsQ1B6RWhDLGtCQUFBLENPMEVBLE9BQUEsQ0FDQSxjQUFBLENBQ0Esa0JBQUEsQ0FDQSxnQkFBQSxDQUNBLDRCTjFEZ0IsQ00yRGhCLHVCQUNJLDRCTjdEVyxDTThEWCxrQ0FDSSxrQkFBQSxDQUNBLHdCTmxFSyxDTXFFYiw0QkFDSSxVQUFBLENBQ0EsV0FBQSxDQUNBLG1CQUFBLENBRUosMkJBQ0ksbUJBQUEsQ0M5RlIsVVJxQkksWUFBQSxDQUNBLGlCQUFBLENBRUEsYUFBQSxDQUNBLHdCQ2RtQixDRGVuQix5REFBQSxDUXJCSixZUk5JLFlBQUEsQ0FDQSxrQlFNMkIsQ1JMM0IsNkJRS2dDLENSSmhDLGtCQUFBLENRS0Esd0JSUkEsWUFBQSxDQUNBLGtCUVErQixDUlAvQix1QlFPb0MsQ1JOcEMsa0JBQUEsQ1FPSSxhQUFBLENBQ0EsUUFBQSxDQUVBLG1DQUNJLFdBQUEsQ1JrQlIsWUFBQSxDQUNBLFdBQUEsQ0FDQSw0QkFBQSxDUWxCUSxxQkFBQSxDQUNBLDRCUE5NXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkB1c2UgXFxcInZhclxcXCI7XFxyXFxuQHVzZSBcXFwibWl4aW5cXFwiO1xcclxcblxcclxcbmhlYWRlciB7XFxyXFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzogNDBweCAyNXB4O1xcclxcbiAgICBnYXA6IDIwcHg7XFxyXFxuICAgIEBpbmNsdWRlIG1peGluLmZsZXgtY29sdW1uO1xcclxcbiAgICB3aWR0aDogdmFyLiRoZWFkaW5nLXdpZHRoO1xcclxcbiAgICBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJGhlYWRpbmctY29sb3I7XFxyXFxuXFxyXFxuICAgIC5pY29uIHtcXHJcXG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgtY2VudGVyKHJvdywgY2VudGVyKTtcXHJcXG4gICAgICAgIHdpZHRoOiA0MHB4O1xcclxcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xcclxcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzU1NTtcXHJcXG4gICAgICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xcclxcbiAgICB9XFxyXFxufVwiLFwiQHVzZSBcXFwidmFyXFxcIjtcXHJcXG5AbWl4aW4gZmxleC1jZW50ZXIoJGZsZXgtZGlyZWN0aW9uLCAkZmxleC1jb250ZW50KXtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246ICRmbGV4LWRpcmVjdGlvbjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiAkZmxleC1jb250ZW50O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbn1cXHJcXG5AbWl4aW4gZmxleC1jb2x1bW4ge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbn1cXHJcXG5cXHJcXG5AbWl4aW4gYmlnLXRpdGxlIHtcXHJcXG4gICAgZm9udC1zaXplOiAyNXB4O1xcclxcbiAgICBmb250LXdlaWdodDogYm9sZDtcXHJcXG59XFxyXFxuXFxyXFxuQG1peGluIG1lZC10aXRsZSB7XFxyXFxuICAgIGZvbnQtc2l6ZTogdmFyLiR0aXRsZS1zaXplO1xcclxcbiAgICBmb250LXdlaWdodDogYm9sZDtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuQG1peGluIHRhc2tfbGlzdF9pdGVtIHtcXHJcXG4gICAgcGFkZGluZzogMTBweDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xcclxcblxcclxcbiAgICBtYXJnaW46IDEwcHggMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiR0YXNrLWJhY2tncm91bmRDb2xvcjtcXHJcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgLTFweCAtMXB4IDFweCAxcHggcmdiYSgxMTAsIDExMCwgMTEwLCAwLjI4NylcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuQG1peGluIHJlbW92ZV9ib3JkZXItb3V0bGluZSB7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxyXFxufVxcclxcblxcclxcbkBtaXhpbiBkYXRlLXBhZGRpbmcge1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xcclxcbiAgICBwYWRkaW5nOiAycHggN3B4O1xcclxcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcclxcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gICAgaGVpZ2h0OiAyNXB4O1xcclxcbn1cXHJcXG5cIixcIi8vZGFyayB0aGVtZSBtb2RlXFxyXFxuXFxyXFxuLy8gQ29sb3IgLS0tLS0tLS0tLS0tLS0tLS0+ICAgICAgIFxcclxcblxcclxcbi8vYmFzZVxcclxcbiRoZWFkaW5nLWNvbG9yOiAjMjIyMjIyO1xcclxcbiRtYWluLWNvbG9yOiAjMzMzMzMzO1xcclxcblxcclxcbi8vIGxpc3RcXHJcXG4kbGlzdEhlYWRpbmctY29sb3I6ICNmZmZmZmZjNztcXHJcXG4kYm9yZGVyYm90dG9tLWNvbG9yOiAxcHggc29saWQgcmdiYSgyMDQsIDIwNCwgMjA0LCAwLjE3MSk7ICBcXHJcXG5cXHJcXG4vL3Rhc2tcXHJcXG4kdGFza1RpdGxlLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuODU2KTtcXHJcXG4kdGFzay1iYWNrZ3JvdW5kQ29sb3I6IHJnYigzOSwgMzksIDM5KTtcXHJcXG5cXHJcXG4vL2R1ZSBkYXRlIFxcclxcbiR0YXNrLWRhdGVDb2xvcjE6IHJnYigxOTIsIDM3LCAzNyk7XFxyXFxuJHRhc2stZGF0ZUNvbG9yMjogcmdiKDIxNiwgMTc2LCAwKTtcXHJcXG4kdGFzay1kYXRlQ29sb3IzOiByZ2IoMTEzLCAxOTQsIDYpO1xcclxcblxcclxcbi8vYWRkIHRhc2sgXFxyXFxuJHBsdXNJY29uLWNvbG9yOiByZ2IoNjAsIDE0NSwgMTk0KTsgIFxcclxcbi8vIGVkaXQgYnV0dG9uIFxcclxcbiRidXR0b25UZXh0LWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuODU2KTtcXHJcXG4kcGxhY2Vob2xkZXItY29sb3I6IHJnYmEoMjAyLCAyMDIsIDIwMiwgMC42OTgpO1xcclxcblxcclxcbi8vc2l6ZSBcXHJcXG4kdGl0bGUtc2l6ZTogMjBweDtcXHJcXG4kbm9ybWFsLXNpemU6IDE2cHg7XFxyXFxuLy8gc2l6aW5nIC0tLS0tLS0tLS0tLS0tLS0+XFxyXFxuJGhlYWRpbmctd2lkdGg6IDcwcHg7IFwiLFwiQHVzZSBcXFwidmFyXFxcIjtcXHJcXG5AdXNlIFxcXCJtaXhpblxcXCI7XFxyXFxuXFxyXFxuXFxyXFxubWFpbiB7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiB2YXIuJGhlYWRpbmctd2lkdGg7XFxyXFxuICAgIHdpZHRoOiBjYWxjKDEwMHZ3IC0gI3t2YXIuJGhlYWRpbmctd2lkdGh9KTtcXHJcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRtYWluLWNvbG9yO1xcclxcbiAgICBvdmVyZmxvdy15OiBoaWRkZW47XFxyXFxuXFxyXFxuIFxcclxcbn1cXHJcXG5cIixcIioge1xcclxcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbiAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sIE94eWdlbiwgVWJ1bnR1LCBDYW50YXJlbGwsICdPcGVuIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xcclxcbiAgICBtYXJnaW46IDA7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxufVxcclxcblxcclxcbmxpIHtcXHJcXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcclxcbn1cIixcIi8vIFV0aWxpdHkgY2xhc3NlcyB0aGF0IGdpdmUgZ2VuZXJhbGx5IGNvbW1vbiBzdHlsaW5nIGFuZCBjYW4gYmUgdXNlZCBpbiBtYW55IHBsYWNlc1xcclxcblxcclxcbkB1c2UgXFxcInZhclxcXCI7XFxyXFxuQHVzZSBcXFwibWl4aW5cXFwiO1xcclxcblxcclxcbi5pdGVtX2R1ZS1vdmVyZHVlIHtcXHJcXG4gICAgQGluY2x1ZGUgbWl4aW4uZGF0ZS1wYWRkaW5nO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHRhc2stZGF0ZUNvbG9yMTtcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuLml0ZW1fZHVlLXRvZGF5IHtcXHJcXG4gICAgQGluY2x1ZGUgbWl4aW4uZGF0ZS1wYWRkaW5nO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHRhc2stZGF0ZUNvbG9yMjtcXHJcXG5cXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuLml0ZW1fZHVlLXNvbWVkYXkge1xcclxcbiAgICBAaW5jbHVkZSBtaXhpbi5kYXRlLXBhZGRpbmc7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kdGFzay1kYXRlQ29sb3IzO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4uZm9ybV90aXRsZSB7XFxyXFxuICAgIEBpbmNsdWRlIG1peGluLnJlbW92ZV9ib3JkZXItb3V0bGluZTtcXHJcXG4gICAgZm9udC1zaXplOiB2YXIuJG5vcm1hbC1zaXplO1xcclxcbiAgICBjb2xvcjogdmFyLiR0YXNrVGl0bGUtY29sb3I7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIGN1cnNvcjogdGV4dDtcXHJcXG59XFxyXFxuXFxyXFxuLnN1YnRhc2sge1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XFxyXFxufVxcclxcbi5idXR0b24tc3R5bGUxIHtcXHJcXG4gICAgQGluY2x1ZGUgbWl4aW4ucmVtb3ZlX2JvcmRlci1vdXRsaW5lO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNjAsIDE0NSwgMTk0KTtcXHJcXG4gICAgY29sb3I6IHZhci4kYnV0dG9uVGV4dC1jb2xvcjtcXHJcXG5cXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXHJcXG4gICAgcGFkZGluZzogN3B4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuXFxyXFxufVxcclxcblxcclxcbi5idXR0b24tc3R5bGUyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxyXFxuICAgIEBpbmNsdWRlIG1peGluLnJlbW92ZV9ib3JkZXItb3V0bGluZTtcXHJcXG4gICAgY29sb3I6IHZhci4kYnV0dG9uVGV4dC1jb2xvcjtcXHJcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuOjpwbGFjZWhvbGRlciB7XFxyXFxuICAgIGNvbG9yOiB2YXIuJHBsYWNlaG9sZGVyLWNvbG9yO1xcclxcbn1cXHJcXG5cXHJcXG4uZGlzYWJsZWQge1xcclxcbiAgICBvcGFjaXR5OiAwLjQ7XFxyXFxufVwiLFwiXFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6IDYxMHB4KSB7XFxyXFxuICAgIC5saXN0LWNvbnRhaW5lciB7XFxyXFxuICAgICAgICBwYWRkaW5nOiAwIDUwcHggMTAwcHggMjVweCAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxufVwiLFwiQHVzZSBcXFwidmFyXFxcIjtcXHJcXG5AdXNlIFxcXCJtaXhpblxcXCI7XFxyXFxuXFxyXFxuXFxyXFxuLnBvcHBlciAge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIHJpZ2h0OiAtNDBweDtcXHJcXG4gICAgdG9wOiAzMHB4O1xcclxcbiAgICAvLyB2aXNpYmlsaXR5OiBoaWRkZW47XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxMjEyMTI7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHg7XFxyXFxuICAgIC5kcm9wX2Rvd25fbWVudSB7XFxyXFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcclxcbiAgICAgICAgZmxleC1kaXJlY3Rpb246ICBjb2x1bW47XFxyXFxuXFxyXFxuXFxyXFxuICAgICAgICBcXHJcXG4gICAgICAgIFxcclxcbiAgICB9XFxyXFxufVwiLFwiQHVzZSBcXFwidmFyXFxcIjtcXHJcXG5AdXNlIFxcXCJtaXhpblxcXCI7XFxyXFxuXFxyXFxuLmxpc3QtY29udGFpbmVyIHtcXHJcXG4gICAgcGFkZGluZzogMHB4IDEwMHB4IDEwMHB4IDEwMHB4O1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIG92ZXJmbG93OiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4ubGlzdC1uYXYge1xcclxcbiAgICBjb2xvcjogdmFyLiRsaXN0SGVhZGluZy1jb2xvcjtcXHJcXG4gICAgcGFkZGluZzogNDBweCAwIDEwcHggMDtcXHJcXG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleC1jZW50ZXIocm93LCBzcGFjZS1iZXR3ZWVuKTtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgYm9yZGVyLWJvdHRvbTogdmFyLiRib3JkZXJib3R0b20tY29sb3I7XFxyXFxuXFxyXFxuICAgIC5saXN0LWhlYWRpbmcge1xcclxcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uYmlnLXRpdGxlO1xcclxcbiAgICB9XFxyXFxuICAgIC5saXN0LXNvcnQge1xcclxcbiAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDtcXHJcXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4ubGlzdC1jb250ZW50IHtcXHJcXG4gICAgcGFkZGluZy10b3A6IDE1cHg7XFxyXFxuICAgIGNvbG9yOiB2YXIuJHRhc2tUaXRsZS1jb2xvcjtcXHJcXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxyXFxuICAgIC50YXNrLWhlYWRpbmcge1xcclxcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4ubWVkLXRpdGxlO1xcclxcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDVweDtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAudGFza19saXN0IHtcXHJcXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XFxyXFxuICAgIH1cXHJcXG59ICBcXHJcXG5cXHJcXG4udGFza19saXN0X2l0ZW0ge1xcclxcbiAgICBAaW5jbHVkZSBtaXhpbi50YXNrX2xpc3RfaXRlbTtcXHJcXG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleC1jZW50ZXIocm93LCBzcGFjZS1iZXR3ZWVuKTtcXHJcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OiA0NXB4O1xcclxcbiAgICAmOmhvdmVyIHtcXHJcXG5cXHJcXG4gICAgICAgIFxcclxcbiAgICB9XFxyXFxuICAgIC5pdGVtX3RpdGxlIHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogdmFyLiRub3JtYWwtc2l6ZTtcXHJcXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcclxcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXHJcXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XFxyXFxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuXFxyXFxuXFxyXFxuICAgIH1cXHJcXG4gICAgLml0ZW1fdG9vbHMge1xcclxcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleC1jZW50ZXIocm93LCBjZW50ZXIpO1xcclxcbiAgICAgICAgZ2FwOiAycHg7XFxyXFxuICAgICAgICAuZWRpdF9pY29uIHtcXHJcXG4gICAgICAgICAgICB3aWR0aDogMjBweDtcXHJcXG4gICAgICAgICAgICBoZWlnaHQ6IDIwcHg7XFxyXFxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgXFxyXFxuICAgICAgICAuZGVsZXRlX2ljb24ge1xcclxcbiAgICAgICAgICAgIHdpZHRoOiAyMHB4O1xcclxcbiAgICAgICAgICAgIGhlaWdodDogMTZweDtcXHJcXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXFxyXFxuLnBsdXNfYWRkX2J1dHRvbiB7XFxyXFxuICAgIEBpbmNsdWRlIG1peGluLmZsZXgtY2VudGVyKHJvdywgaW5pdGlhbCk7XFxyXFxuICAgIGdhcDogNXB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIHBhZGRpbmctYm90dG9tOiA1cHg7XFxyXFxuICAgIHVzZXItc2VsZWN0OiBub25lO1xcclxcbiAgICBjb2xvcjogdmFyLiRwbGFjZWhvbGRlci1jb2xvcjtcXHJcXG4gICAgJjpob3ZlciB7XFxyXFxuICAgICAgICBjb2xvcjogdmFyLiRidXR0b25UZXh0LWNvbG9yO1xcclxcbiAgICAgICAgLnBsdXMtaWNvbiB7XFxyXFxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTBweDtcXHJcXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHBsdXNJY29uLWNvbG9yO1xcclxcbiAgICAgICAgfVxcclxcbiAgICB9XFxyXFxuICAgIC5wbHVzLWljb24ge1xcclxcbiAgICAgICAgd2lkdGg6IDIwcHg7XFxyXFxuICAgICAgICBoZWlnaHQ6IDIwcHg7XFxyXFxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZVxcclxcbiAgICB9XFxyXFxuICAgIC5hZGRfdGFzayB7XFxyXFxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZVxcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcblwiLFwiQHVzZSBcXFwidmFyXFxcIjtcXHJcXG5AdXNlIFxcXCJtaXhpblxcXCI7XFxyXFxuXFxyXFxuLmZvcm1fdG9wIHtcXHJcXG4gICAgQGluY2x1ZGUgbWl4aW4udGFza19saXN0X2l0ZW07XFxyXFxufVxcclxcblxcclxcblxcclxcbi5mb3JtX2V4dHJhIHtcXHJcXG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleC1jZW50ZXIocm93LCBzcGFjZS1iZXR3ZWVuKTtcXHJcXG4gICAgLmZvcm1fdG9vbHMge1xcclxcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleC1jZW50ZXIocm93LCBpbml0aWFsKTtcXHJcXG4gICAgICAgIG1hcmdpbjogMTBweCAwO1xcclxcbiAgICAgICAgZ2FwOiAxMHB4O1xcclxcbiAgICBcXHJcXG4gICAgICAgIC5mb3JtX2ljb24ge1xcclxcbiAgICAgICAgICAgIGhlaWdodDogMjBweDtcXHJcXG4gICAgICAgICAgICBAaW5jbHVkZSBtaXhpbi5yZW1vdmVfYm9yZGVyLW91dGxpbmU7XFxyXFxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzU1NTtcXHJcXG4gICAgICAgICAgICBjb2xvcjogdmFyLiR0YXNrVGl0bGUtY29sb3JcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pIHtcbiAgdmFyIF9pdGVtID0gX3NsaWNlZFRvQXJyYXkoaXRlbSwgNCksXG4gICAgICBjb250ZW50ID0gX2l0ZW1bMV0sXG4gICAgICBjc3NNYXBwaW5nID0gX2l0ZW1bM107XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBpc09sZElFID0gZnVuY3Rpb24gaXNPbGRJRSgpIHtcbiAgdmFyIG1lbW87XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSgpIHtcbiAgICBpZiAodHlwZW9mIG1lbW8gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuICAgICAgLy8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuICAgICAgLy8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuICAgICAgLy8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG4gICAgICAvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcbiAgICAgIG1lbW8gPSBCb29sZWFuKHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtbztcbiAgfTtcbn0oKTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uIGdldFRhcmdldCgpIHtcbiAgdmFyIG1lbW8gPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKHRhcmdldCkge1xuICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtb1t0YXJnZXRdO1xuICB9O1xufSgpO1xuXG52YXIgc3R5bGVzSW5Eb20gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdXG4gICAgfTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZXNJbkRvbS5wdXNoKHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogYWRkU3R5bGUob2JqLCBvcHRpb25zKSxcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgdmFyIGF0dHJpYnV0ZXMgPSBvcHRpb25zLmF0dHJpYnV0ZXMgfHwge307XG5cbiAgaWYgKHR5cGVvZiBhdHRyaWJ1dGVzLm5vbmNlID09PSAndW5kZWZpbmVkJykge1xuICAgIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gJ3VuZGVmaW5lZCcgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgICBpZiAobm9uY2UpIHtcbiAgICAgIGF0dHJpYnV0ZXMubm9uY2UgPSBub25jZTtcbiAgICB9XG4gIH1cblxuICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuICB9KTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgb3B0aW9ucy5pbnNlcnQoc3R5bGUpO1xuICB9IGVsc2Uge1xuICAgIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQob3B0aW9ucy5pbnNlcnQgfHwgJ2hlYWQnKTtcblxuICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICAgIH1cblxuICAgIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH1cblxuICByZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbnZhciByZXBsYWNlVGV4dCA9IGZ1bmN0aW9uIHJlcGxhY2VUZXh0KCkge1xuICB2YXIgdGV4dFN0b3JlID0gW107XG4gIHJldHVybiBmdW5jdGlvbiByZXBsYWNlKGluZGV4LCByZXBsYWNlbWVudCkge1xuICAgIHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcbiAgICByZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcbiAgfTtcbn0oKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyhzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG4gIHZhciBjc3MgPSByZW1vdmUgPyAnJyA6IG9iai5tZWRpYSA/IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIikuY29uY2F0KG9iai5jc3MsIFwifVwiKSA6IG9iai5jc3M7IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG4gICAgdmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG4gICAgaWYgKGNoaWxkTm9kZXNbaW5kZXhdKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG4gICAgICBzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyhzdHlsZSwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBvYmouY3NzO1xuICB2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChtZWRpYSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgnbWVkaWEnLCBtZWRpYSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUucmVtb3ZlQXR0cmlidXRlKCdtZWRpYScpO1xuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiaW1wb3J0IGFwaSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgICAgICAgaW1wb3J0IGNvbnRlbnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtdXJsLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5zY3NzXCI7XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY29udGVudC5sb2NhbHMgfHwge307IiwiaW1wb3J0IHtmb3JtTG9jYXRpb259IGZyb20gXCIuL3Nob3dGb3JtXCI7XHJcbmltcG9ydCAqIGFzIGh0bWxUYWcgZnJvbSBcIi4uL2h0bWwtdGFnc1wiO1xyXG5cclxuY2xhc3MgVGFzayB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZSwgZHVlRGF0ZT0nTm8gRGF0ZScsIGltcG9ydGFuY2U9J25vbmUnKSB7XHJcbiAgICAgICAgdGhpcy5faWQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuICAgICAgICB0aGlzLl90aXRsZSA9IHRpdGxlO1xyXG4gICAgICAgIHRoaXMuX2R1ZURhdGUgPSBkdWVEYXRlOyBcclxuICAgICAgICB0aGlzLl9pbXBvcnRhbmNlID0gaW1wb3J0YW5jZTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgdGl0bGUobmV3VGl0bGUpIHtcclxuICAgICAgICB0aGlzLl90aXRsZSA9IG5ld1RpdGxlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCB0aXRsZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdGl0bGU7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGRhdGUobmV3RHVlRGF0ZSkge1xyXG4gICAgICAgIHRoaXMuX2R1ZURhdGUgPSBuZXdEdWVEYXRlOyBcclxuICAgIH1cclxuXHJcbiAgICBnZXQgZGF0ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZHVlRGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgaW1wb3J0YW5jZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faW1wb3J0YW5jZTtcclxuICAgICAgfVxyXG5cclxuICAgIHNldCBpbXBvcnRhbmNlKHZhbHVlKSB7XHJcbiAgICAgICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2ltcG9ydGFuY2UgPSB2YWx1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlT2JqZWN0KCkge1xyXG4gICAgICAgIGNvbnN0IGZvcm1fd3JhcHBlciA9IGZvcm1Mb2NhdGlvbi5nZXRfSW5mbygpLm5ld0Zvcm07XHJcbiAgICAgICAgY29uc3QgZGF0ZVNlY3Rpb24gPSBmb3JtTG9jYXRpb24uZ2V0X0luZm8oKS5kYXRlU2VjdGlvbjtcclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBuZXdUYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcclxuICAgICAgICBuZXdUYXNrLmRhdGFzZXQuaWQgPSB0aGlzLl9pZDtcclxuICAgICAgICBuZXdUYXNrLmNsYXNzTGlzdC5hZGQoJ3Rhc2tfbGlzdF9pdGVtJyk7XHJcblxyXG4gICAgICAgIGNvbnN0IHRhc2tIVE1MID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKVxyXG4gICAgICAgICAgICAuY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50KFxyXG4gICAgICAgICAgICAgICAgaHRtbFRhZy50YXNrKFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3RpdGxlLCB0aGlzLl9kdWVEYXRlXHJcbiAgICAgICAgICAgICAgICApKTtcclxuICAgIFxyXG4gICAgICAgIC8vYXBlbmRpbmcgdGhlIGNsYXNzIHRvIHdlYnBhZ2VcclxuICAgICAgICBuZXdUYXNrLmFwcGVuZENoaWxkKHRhc2tIVE1MKTtcclxuICAgICAgICBkYXRlU2VjdGlvbi5pbnNlcnRCZWZvcmUobmV3VGFzaywgZm9ybV93cmFwcGVyKVxyXG4gICAgfVxyXG5cclxuICAgIGVkaXRPYmplY3QoKSB7XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIF9nZXRJRCgpIHtcclxuICAgIHJldHVybiAnXycgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRhc2s7IiwiaW1wb3J0ICogYXMgaHRtbFRhZyBmcm9tIFwiLi4vaHRtbC10YWdzXCI7XHJcbmltcG9ydCB7c2hvd0Zvcm0sIGZvcm1Mb2NhdGlvbiwgYWRkVGFza0J1dHRvbn0gZnJvbSBcIi4vc2hvd0Zvcm1cIjtcclxuaW1wb3J0IFRhc2sgZnJvbSBcIi4vdGFza0NvbnN0cnVjdG9yXCI7XHJcblxyXG5jb25zdCB0YXNrQXJyYXkgPSBbXTtcclxuY29uc3QgYWRkVGFzayA9ICgoKSA9PiB7XHJcbiAgICBcclxuICAgIGNvbnN0IGNyZWF0ZSA9ICgpID0+IHtcclxuICAgICAgICAvLyBhbGwgdGhlIHZhbHVlcyBuZWVkZWQgdG8gYmUgYWRkZWQgdG8gY3JlYXRlIHRhc2tcclxuICAgICAgICBjb25zdCB0YXNrX3RpdGxlID0gZm9ybUxvY2F0aW9uLmdldF9JbmZvKCkudGFza190aXRsZTtcclxuICAgICAgICBjb25zdCB0YXNrX2R1ZURhdGUgPSBmb3JtTG9jYXRpb24uZ2V0X0luZm8oKS50YXNrX2R1ZURhdGU7XHJcbiAgICAgICAgY29uc3QgdGFza19pbXBvcnRhbmNlID0gZm9ybUxvY2F0aW9uLmdldF9JbmZvKCkudGFza19pbXBvcnRhbmNlO1xyXG4gICAgICAgIGNvbnN0IHRhc2tfY29sb3IgPSBmb3JtTG9jYXRpb24uZ2V0X0luZm8oKS50YXNrX2NvbG9yO1xyXG5cclxuICAgICAgICAvLyBjcmVhdGUgdGFzayBvYmplY3RcclxuICAgICAgICBjb25zdCBuZXdUYXNrT2JqZWN0ID0gbmV3IFRhc2sodGFza190aXRsZS52YWx1ZSwgdGFza19kdWVEYXRlLnZhbHVlLCB0YXNrX2ltcG9ydGFuY2UudmFsdWUpO1xyXG4gICAgICAgIHRhc2tBcnJheS5wdXNoKG5ld1Rhc2tPYmplY3QpO1xyXG4gICAgICAgIG5ld1Rhc2tPYmplY3QuY3JlYXRlT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIC8vIGNsZWFyIHRoZSB0ZXh0Ym94IGZvciBuZXcgdGFza3NcclxuICAgICAgICB0YXNrX3RpdGxlLnZhbHVlID0gXCJcIjtcclxuICAgICAgICB0YXNrX3RpdGxlLmZvY3VzKCk7XHJcbiAgICAgICAgYWRkVGFza0J1dHRvbi5kaXNhYmxlKCk7XHJcblxyXG4gICAgICAgIC8vIGFkZCBldmVudCBsaXN0ZW5lciB0byB0aGUgZWRpdCBidXR0b25cclxuXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBjcmVhdGUsXHJcbiAgICB9XHJcbn0pKClcclxuXHJcbmNvbnN0IGVkaXRUYXNrID0gKCgpID0+IHtcclxuXHJcblxyXG59KSgpO1xyXG5jb25zdCBkZWxldGVUYXNrID0gKCgpID0+IHtcclxuXHJcblxyXG59KSgpO1xyXG5jb25zdCBtYXJrQ29tcGxldGVUYXNrID0gKCgpID0+IHtcclxuXHJcblxyXG59KSgpO1xyXG5cclxuY29uc3QgZHJhZ1Rhc2sgPSAoKCkgPT4ge1xyXG5cclxufSkoKVxyXG5cclxuXHJcbmV4cG9ydCB7YWRkVGFzaywgdGFza0FycmF5fTsiLCJjb25zdCBmb3JtID0gYFxyXG48ZGl2IGNsYXNzPVwiZm9ybV90b3BcIj5cclxuICAgIDxkaXYgY2xhc3M9J2Zvcm1faW5wdXQnPlxyXG4gICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBjbGFzcz0nZm9ybV90aXRsZScgcGxhY2Vob2xkZXI9XCJlLmcuIGJ1eSB0b290aHBhc3RlXCI+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9J2Zvcm1fZXh0cmEnPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9J2Zvcm1fdG9vbHMnPlxyXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT0nZGF0ZScgY2xhc3M9XCJmb3JtX2ljb25cIj5cclxuICAgICAgICAgICAgPHNlbGVjdCBuYW1lPSdpbXBvcnRhbmNlJyBjbGFzcz1cImZvcm1faWNvblwiPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbiBkYXRhLXByaW9yaXR5PSdoaWdoJz5Mb3c8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgIDxvcHRpb24gZGF0YS1wcmlvcml0eT0nbWVkJz5NZWRpdW08L29wdGlvbj5cclxuICAgICAgICAgICAgICAgIDxvcHRpb24gZGF0YS1wcmlvcml0eT0nbG93Jz5IaWdoPC9vcHRpb24+XHJcbiAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgICAgICA8c2VsZWN0IG5hbWU9J2NvbG9yJyBjbGFzcz1cImZvcm1faWNvblwiPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbiBkYXRhLXByaW9yaXR5PSdyZWQnPnJlZDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbiBkYXRhLXByaW9yaXR5PSdibHVlJz5ibHVlPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICA8b3B0aW9uIGRhdGEtcHJpb3JpdHk9J3llbGxvdyc+eWVsbG93PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICA8b3B0aW9uIGRhdGEtcHJpb3JpdHk9J2dyZWVuJz5ncmVlbjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbiBkYXRhLXByaW9yaXR5PSdncmF5Jz5ncmF5PC9vcHRpb24+XHJcbiAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PlxyXG5cclxuPGRpdiBjbGFzcz0nZm9ybV9ib3R0b20nPlxyXG4gICAgPGlucHV0IHR5cGU9XCJidXR0b25cIiBkYXRhLWtleT0nRW50ZXInIGlkPSdmb3JtX2FkZF9idXR0b24nIGNsYXNzPSdidXR0b24tc3R5bGUxJyB2YWx1ZT0nQWRkIFRhc2snPlxyXG4gICAgPGlucHV0IHR5cGU9XCJidXR0b25cIiBkYXRhLWtleT0nRXNjYXBlIGlkPSdmb3JtX2NhbmNlbF9idXR0b24nIGNsYXNzPSdidXR0b24tc3R5bGUyJyB2YWx1ZT0nQ2FuY2VsJz5cclxuPC9kaXY+YDtcclxuXHJcbmNvbnN0IGFkZFRhc2tCdXR0b24gPSBgXHJcbiAgICA8aW1nIGNsYXNzPSdwbHVzLWljb24nIHNyYz0nL3NyYy9pbWFnZXMvcGx1cy5zdmcnPlxyXG4gICAgPGRpdiBjbGFzcz0naXRlbV90aXRsZSBhZGRfdGFzayc+QWRkIHRhc2s8L2Rpdj5cclxuYFxyXG5cclxuY29uc3QgdGFzayA9ICh0aXRsZSA9ICdObyBUaXRsZSBHaXZlbicsIGRhdGVTdHlsZVR5cGUgPSAnaXRlbV9kdWUtdG9kYXknLCBkYXRlID0gXCJUb2RheVwiKSA9PiB7XHJcbiAgICBjb25zdCB0YXNrSFRNTCA9IGBcclxuICAgICAgICA8ZGl2IGNsYXNzPSdpdGVtX3RpdGxlJz4ke3RpdGxlfTwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdpdGVtX3Rvb2xzJz5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz0naXRlbV9kdWUtdG9kYXknPkR1ZSAke2RhdGV9PC9kaXY+XHJcbiAgICAgICAgICAgIDxpbWcgY2xhc3M9J2VkaXRfaWNvbicgc3JjPScvc3JjL2ltYWdlcy90YXNrX2VkaXRfaWNvbi5zdmcnPlxyXG4gICAgICAgICAgICA8aW1nIGNsYXNzPSdkZWxldGVfaWNvbicgc3JjPScvc3JjL2ltYWdlcy90cmFzaC5zdmcnPlxyXG5cclxuXHJcbiAgICAgICAgPC9kaXY+YFxyXG4gICAgXHJcbiAgICByZXR1cm4gdGFza0hUTUw7XHJcbn1cclxuZXhwb3J0IHtmb3JtLCBhZGRUYXNrQnV0dG9uLCB0YXNrfTsiLCJpbXBvcnQgKiBhcyBodG1sVGFnIGZyb20gXCIuLi9odG1sLXRhZ3NcIjtcclxuaW1wb3J0IHthZGRUYXNrfSBmcm9tIFwiLi90YXNrXCI7XHJcbmNvbnN0IHNob3dGb3JtID0gKCgpID0+IHtcclxuICAgIGxldCBJc0Zvcm1FbmFibGVkID0gbnVsbDtcclxuICAgIGNvbnN0IGdldElzRm9ybUVuYWJsZWQgPSAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIElzRm9ybUVuYWJsZWQ7XHJcbiAgICB9XHJcbiAgICBjb25zdCB1cGRhdGVJc0Zvcm1FbmFibGVkID0gKHZhbHVlKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlID09PSB0cnVlID8gSXNGb3JtRW5hYmxlZCA9IHRydWUgOiBJc0Zvcm1FbmFibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY3JlYXRlID0gKGRhdGVTZWN0aW9uKSA9PiB7XHJcbiAgICAgICAgY29uc3QgbmV3Rm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XHJcbiAgICAgICAgbmV3Rm9ybS5jbGFzc0xpc3QuYWRkKCdmb3JtX3dyYXBwZXInKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBhZGQgdGhlIEhUTUwgYW5kIGFwcGVuZCB0byB0aGUgbmV3Rm9ybSBcclxuICAgICAgICBjb25zdCBmb3JtSFRNTCA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCkuY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50KGh0bWxUYWcuZm9ybSk7XHJcbiAgICAgICAgbmV3Rm9ybS5hcHBlbmRDaGlsZChmb3JtSFRNTCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gYXBwZW5kIGl0IHRvIHRoZSB3ZWJwYWdlXHJcbiAgICAgICAgZGF0ZVNlY3Rpb24uYXBwZW5kQ2hpbGQobmV3Rm9ybSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy9hZGQgZXZlbnQgbGlzdGVuZXJzIHRvIHRoZSBidXR0b25zIG9mIGVkaXQgRm9ybS5cclxuICAgICAgICBjb25zdCB0YXNrX3RpdGxlID0gbmV3Rm9ybS5xdWVyeVNlbGVjdG9yKCcuZm9ybV90aXRsZScpO1xyXG4gICAgICAgIGNvbnN0IHRhc2tfZHVlRGF0ZSA9IG5ld0Zvcm0ucXVlcnlTZWxlY3RvcihcImlucHV0W3R5cGU9J2RhdGUnXVwiKTtcclxuICAgICAgICBjb25zdCB0YXNrX2NvbG9yID0gbmV3Rm9ybS5xdWVyeVNlbGVjdG9yKFwiW25hbWU9J2NvbG9yJ11cIik7XHJcbiAgICAgICAgY29uc3QgZm9ybV9hZGRfYnV0dG9uID0gbmV3Rm9ybS5sYXN0Q2hpbGQuY2hpbGROb2Rlc1sxXTtcclxuICAgICAgICBjb25zdCBmb3JtX2NhbmNlbF9idXR0b24gPSBuZXdGb3JtLmxhc3RDaGlsZC5jaGlsZE5vZGVzWzNdO1xyXG4gICAgICAgIGNvbnN0IHRhc2tfaW1wb3J0YW5jZSA9IG5ld0Zvcm0ucXVlcnlTZWxlY3RvcignW25hbWU9XCJpbXBvcnRhbmNlXCJdJyk7XHJcbiAgICAgICAgZm9ybV9jYW5jZWxfYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCByZW1vdmUpO1xyXG4gICAgICAgIGZvcm1fYWRkX2J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgYWRkVGFzay5jcmVhdGUpO1xyXG4gICAgICAgIHRhc2tfdGl0bGUuZm9jdXMoKTtcclxuICAgICAgICAvLyB1cGRhdGUgZm9ybUVuYWJsZWQgc28gdGhhdCBvbmx5IG9uZSBlZGl0IGZvcm0gY2FuIGV4aXN0IGluIHRoZSB3ZWJwYWdlXHJcbiAgICAgICAgdXBkYXRlSXNGb3JtRW5hYmxlZCh0cnVlKTtcclxuICAgICAgICAvLyBzdG9yZSBmb3JtSW5mbyAodGl0bGUsIGRhdGUsIGV0Yykgc28gaXQgY2FuIGJlIGFjY2Vzc2VkIGxhdGVyXHJcbiAgICAgICAgZm9ybUxvY2F0aW9uLnN0b3JlX0luZm8oXHJcbiAgICAgICAgICAgIGRhdGVTZWN0aW9uLCBcclxuICAgICAgICAgICAgZm9ybV9hZGRfYnV0dG9uLCBcclxuICAgICAgICAgICAgZm9ybV9jYW5jZWxfYnV0dG9uLCBcclxuICAgICAgICAgICAgbmV3Rm9ybSwgXHJcbiAgICAgICAgICAgIHRhc2tfdGl0bGUsXHJcbiAgICAgICAgICAgIHRhc2tfZHVlRGF0ZSwgXHJcbiAgICAgICAgICAgIHRhc2tfaW1wb3J0YW5jZSxcclxuICAgICAgICAgICAgdGFza19jb2xvcixcclxuICAgICAgICApO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIGluaXRpYWwgZGlzYWJsZVxyXG4gICAgICAgIGFkZFRhc2tCdXR0b24uZGlzYWJsZSgpO1xyXG4gICAgICAgIC8vIGVuYWJsZSBidXR0b24gaWYgdXNlciBpbnB1dCB0ZXh0IGlzIGdyZWF0ZXIgdGhhbiBvbmUuIERpc2FibGUgYnV0dG9uIGlmIG5vdC5cclxuICAgICAgICBmb3JtTG9jYXRpb24uZ2V0X0luZm8oKS50YXNrX3RpdGxlLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKGUpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgdGl0bGUgPSBlLnRhcmdldC52YWx1ZTtcclxuICAgICAgICAgICAgaWYodGl0bGUubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgYWRkVGFza0J1dHRvbi5lbmFibGUoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGFkZFRhc2tCdXR0b24uZGlzYWJsZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgICAgICAvLyBsaXN0ZW5zIGZvciBrZXlwcmVzcyBzbyB0aGF0IFwiZW50ZXJcIiBhbmQgXCJjYW5jZWxcIiBrZXkgd29ya3NcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZGV0ZWN0S2V5UHJlc3MpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHJlbW92ZXMgdGhlIGV2ZW50IGxpc3RlbmVycywgdGhlIGVsZW1lbnRzLCBhbmQgcmVjcmVhdGUgYWRkVGFzayBidXR0b24uIFxyXG4gICAgY29uc3QgcmVtb3ZlID0gKCkgPT4ge1xyXG4gICAgICAgIC8vIHJlbW92ZSBhbGwgZXZlbnQgbGlzdGVuZXJzIGZpcnN0XHJcbiAgICAgICAgZm9ybUxvY2F0aW9uLmdldF9JbmZvKCkuZm9ybV9hZGRfYnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBhZGRUYXNrLmNyZWF0ZSk7XHJcbiAgICAgICAgZm9ybUxvY2F0aW9uLmdldF9JbmZvKCkuZm9ybV9jYW5jZWxfYnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCByZW1vdmUpO1xyXG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBkZXRlY3RLZXlQcmVzcyk7XHJcblxyXG4gICAgICAgIHVwZGF0ZUlzRm9ybUVuYWJsZWQoZmFsc2UpO1xyXG4gICAgICAgIC8vIHJlbW92ZSBmcm9tIGRvbSB0cmVlXHJcbiAgICAgICAgZm9ybUxvY2F0aW9uLmdldF9JbmZvKCkubmV3Rm9ybS5yZW1vdmUoKTtcclxuXHJcbiAgICAgICAgLy8gYWRkcyBhZGRfVGFzayBidXR0b24gYmFja1xyXG4gICAgICAgIGFkZFRhc2tCdXR0b24uY3JlYXRlKGZvcm1Mb2NhdGlvbi5nZXRfSW5mbygpLmRhdGVTZWN0aW9uKTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBjcmVhdGUsIFxyXG4gICAgICAgIHVwZGF0ZUlzRm9ybUVuYWJsZWQsIFxyXG4gICAgICAgIGdldElzRm9ybUVuYWJsZWQsICBcclxuICAgICAgICByZW1vdmUsXHJcbiAgICB9XHJcbn0pKCk7XHJcblxyXG5cclxuY29uc3QgYWRkVGFza0J1dHRvbiA9ICgoKSA9PiB7XHJcbiAgICBjb25zdCByZW1vdmUgPSAodGhlQnV0dG9uKSA9PiB7XHJcbiAgICAgICAgdGhlQnV0dG9uLnJlbW92ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGNyZWF0ZSA9IChkYXRlU2VjdGlvbikgPT4ge1xyXG4gICAgICAgIGNvbnN0IG5ld0FkZFRhc2tCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG4gICAgICAgIG5ld0FkZFRhc2tCdG4uY2xhc3NMaXN0LmFkZCgncGx1c19hZGRfYnV0dG9uJyk7XHJcblxyXG4gICAgICAgIC8vIGFkZCB0aGUgSFRNTCBhcHBlbmQgdG8gTmV3QWRkVGFza0J0blxyXG4gICAgICAgIGNvbnN0IGFkZFRhc2tGcmFnbWVudEhUTWwgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudChodG1sVGFnLmFkZFRhc2tCdXR0b24pO1xyXG4gICAgICAgIG5ld0FkZFRhc2tCdG4uYXBwZW5kQ2hpbGQoYWRkVGFza0ZyYWdtZW50SFRNbCk7XHJcblxyXG4gICAgICAgIC8vYXBwZW5kIGl0IHRvIHRoZSB3ZWJwYWdlXHJcbiAgICAgICAgZGF0ZVNlY3Rpb24uYXBwZW5kQ2hpbGQobmV3QWRkVGFza0J0bik7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZGlzYWJsZSA9ICgpID0+IHtcclxuICAgICAgICBjb25zdCBmb3JtX2FkZF9idXR0b24gPSBmb3JtTG9jYXRpb24uZ2V0X0luZm8oKS5mb3JtX2FkZF9idXR0b247XHJcbiAgICAgICAgZm9ybV9hZGRfYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2Rpc2FibGVkJylcclxuICAgICAgICBmb3JtTG9jYXRpb24uZ2V0X0luZm8oKS5mb3JtX2FkZF9idXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGVuYWJsZSA9ICgpID0+IHtcclxuICAgICAgICBjb25zdCBmb3JtX2FkZF9idXR0b24gPSBmb3JtTG9jYXRpb24uZ2V0X0luZm8oKS5mb3JtX2FkZF9idXR0b247XHJcbiAgICAgICAgZm9ybV9hZGRfYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2Rpc2FibGVkJylcclxuICAgICAgICBmb3JtTG9jYXRpb24uZ2V0X0luZm8oKS5mb3JtX2FkZF9idXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge3JlbW92ZSwgY3JlYXRlLCBkaXNhYmxlLCBlbmFibGV9XHJcbn0pKCk7XHJcblxyXG5jb25zdCBkZXRlY3RLZXlQcmVzcyA9IChlKSA9PiB7XHJcbiAgICBpZihlLmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICAgIHJldHVybiBzaG93Rm9ybS5yZW1vdmUoKTtcclxuICAgIH0gZWxzZSBpZihlLmtleSA9PT0gJ0VudGVyJyAmJiBmb3JtTG9jYXRpb24uZ2V0X0luZm8oKS50YXNrX3RpdGxlLnZhbHVlLmxlbmd0aCA+IDAgKSB7XHJcbiAgICAgICAgcmV0dXJuIGFkZFRhc2suY3JlYXRlKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIHJldHJpZXZlIGxvY2F0aW9uIG9mIHRoZSBmb3JtIGFuZCB0aGVuIGJlIGFibGUgdG8gZGVsZXRlIGl0XHJcbmNvbnN0IGZvcm1Mb2NhdGlvbiA9ICgoKSA9PiB7XHJcbiAgICBsZXQgZm9ybUluZm8gPSB7fTtcclxuICAgIGNvbnN0IHN0b3JlX0luZm8gPSAoZGF0ZVNlY3Rpb24sIGZvcm1fYWRkX2J1dHRvbiwgZm9ybV9jYW5jZWxfYnV0dG9uLCBuZXdGb3JtLCB0YXNrX3RpdGxlLCB0YXNrX2R1ZURhdGUsIHRhc2tfaW1wb3J0YW5jZSwgdGFza19jb2xvcikgPT4ge1xyXG4gICAgICAgIGZvcm1JbmZvID0ge1xyXG4gICAgICAgICAgICBkYXRlU2VjdGlvbixcclxuICAgICAgICAgICAgZm9ybV9hZGRfYnV0dG9uLFxyXG4gICAgICAgICAgICBmb3JtX2NhbmNlbF9idXR0b24sXHJcbiAgICAgICAgICAgIG5ld0Zvcm0sXHJcbiAgICAgICAgICAgIHRhc2tfdGl0bGUsXHJcbiAgICAgICAgICAgIHRhc2tfZHVlRGF0ZSxcclxuICAgICAgICAgICAgdGFza19pbXBvcnRhbmNlLFxyXG4gICAgICAgICAgICB0YXNrX2NvbG9yXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmb3JtSW5mbztcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBnZXRfSW5mbyA9ICgpID0+IHtcclxuICAgICAgICByZXR1cm4gZm9ybUluZm87XHJcbiAgICB9IFxyXG5cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHN0b3JlX0luZm8sXHJcbiAgICAgICAgZ2V0X0luZm8sXHJcbiAgICB9XHJcbiAgICBcclxufSkoKVxyXG5cclxuZXhwb3J0IHtzaG93Rm9ybSwgZm9ybUxvY2F0aW9uLCBhZGRUYXNrQnV0dG9ufTtcclxuIiwiaW1wb3J0IHtzaG93Rm9ybSwgYWRkVGFza0J1dHRvbn0gZnJvbSBcIi4vdGFza3Mvc2hvd0Zvcm1cIjtcclxuaW1wb3J0IHthZGRUYXNrLCB0YXNrQXJyYXl9IGZyb20gXCIuL3Rhc2tzL3Rhc2tcIjtcclxuXHJcbmNvbnN0IGJ1dHRvbkhhbmRsZXIgPSAoZSkgPT4ge1xyXG5cclxuICAgIGlmKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBsdXNfYWRkX2J1dHRvblwiKSkge1xyXG4gICAgICAgIGlmKHNob3dGb3JtLmdldElzRm9ybUVuYWJsZWQoKSA9PT0gdHJ1ZSkge1xyXG4gICAgICAgICAgICBzaG93Rm9ybS5yZW1vdmUoKTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIHNob3dGb3JtLmNyZWF0ZShlLnRhcmdldC5wYXJlbnROb2RlKTtcclxuICAgICAgICBhZGRUYXNrQnV0dG9uLnJlbW92ZShlLnRhcmdldCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkZWxldGVfaWNvbicpKSB7XHJcbiAgICAgICAgY29uc3QgaXRlbVRvQmVEZWxldGVkID0gZS50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xyXG4gICAgICAgIGNvbnN0IGl0ZW1Ub0JlRGVsZXRlZF9JRCA9IHBhcnNlSW50KGl0ZW1Ub0JlRGVsZXRlZC5kYXRhc2V0LmlkKTtcclxuICAgICAgICBcclxuICAgICAgICB0YXNrQXJyYXkuZm9yRWFjaChlbCA9PiB7XHJcbiAgICAgICAgICAgIGlmKGVsLl9pZCA9PT0gaXRlbVRvQmVEZWxldGVkX0lEKSB7XHJcbiAgICAgICAgICAgICAgICB0YXNrQXJyYXkuc3BsaWNlKHRhc2tBcnJheS5pbmRleE9mKGVsKSwgMSk7XHJcbiAgICAgICAgICAgICAgICBpdGVtVG9CZURlbGV0ZWQucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG4gICAgICAgIFxyXG5cclxuICAgIH1cclxufVxyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBidXR0b25IYW5kbGVyLCBmYWxzZSk7XHJcblxyXG5pbXBvcnQgeyBhZGREYXlzLCBmb3JtYXQsIGZvcm1hdERpc3RhbmNlLCBmb3JtYXRSZWxhdGl2ZSwgc3RhcnRPZkRheSwgc3ViRGF5cyB9IGZyb20gJ2RhdGUtZm5zJ1xyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCB7YnV0dG9uSGFuZGxlcn07XHJcblxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0=